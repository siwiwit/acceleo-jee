[comment encoding = UTF-8 /]
[module generateServiceContextXml('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::hibernate::common::hibernatePathUtil /]
[import org::acceleo::module::pim::uml21::gen::java::common::common /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::common::pathUtil /]
[import org::acceleo::module::pim::uml21::gen::java::spring::profile /]
[template public generateServiceContextXml(aModel : Model, resourceFoler : String)]
	[file (aModel.generateProjectFolder().concat(resourceFoler).concat('/').concat(aModel.generateProjectFolder()).concat('-context.xml'), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:service="http://www.impalaframework.org/schema/service"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.impalaframework.org/schema/service http://impala.googlecode.com/svn/schema/service-registry.xsd">

    <service:export-array beanNames="[aModel.eAllContents(Class)->select(aClass:Class|aClass.isService()).name.toLower()->sep(',')/]"/>
	[for (aEntityClass : Class | aModel.eAllContents(Class)->select(aClass:Class|aClass.isEntity())->asSet())]
	<service:import id = "[aEntityClass.name.toLower()/]dao" proxyTypes = "[if (aEntityClass.generateJavaPackage().size()>0)][aEntityClass.generateJavaPackage()/].[/if][aEntityClass.name/]"/>
	[/for]

	[for (aService : Class | aModel.eAllContents(Class)->select(aClass:Class|aClass.isService())->asSet())]
    <bean id="[aService.name.toLower()/]" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="target">
            <bean class="[if (aService.generateJavaPackage().size()>0)][aService.generateJavaPackage()/].[/if][aService.name/]">
				[if (aService.clientDependency->notEmpty() and aService.clientDependency.supplier->filter(Class)->exists(aClass:Class|aClass.isEntity()))]
					[for (aEntityClass : Class | aService.clientDependency.supplier->filter(Class)->select(aClass:Class|aClass.isEntity()))]
                <property name="[aEntityClass.name.toLowerFirst()/]" ref = "[aEntityClass.name.toLower()/]dao"/>
					[/for]
				[/if]
                [comment]<property name="sessionFactory" ref = "sessionFactory"/>[/comment]
            </bean>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
	[/for]    
</beans>
	[/file]
[/template]
