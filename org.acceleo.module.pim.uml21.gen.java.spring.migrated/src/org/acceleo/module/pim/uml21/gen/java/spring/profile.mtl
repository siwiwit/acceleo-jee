[module profile('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::acceleo::module::pim::uml21::services::uml2services /]

[query public isConfig(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('Config'))
/]


[query public isConfig(property : Property) : Boolean =
property.hasStereotype(getProperty('Config'))
/]


[query public isDao(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('Dao'))
/]


[query public isDto(parameter : Parameter) : Boolean =
parameter.type.isDto()
/]


[query public isEntity(parameter : Parameter) : Boolean =
parameter.type.isEntity()
/]


[query public isDto(type : Type) : Boolean =
type.hasStereotype(getProperty('Dto'))
/]


[query public isEntity(type : Type) : Boolean =
hasStereotype(getProperty('Entity'))
/]


[query public isController(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('Controller'))
/]


[query public isUi(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('Ui'))
/]


[query public isView(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('View'))
/]


[query public isService(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('Service'))
/]


[query public isRemote(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('Remote'))
/]


[query public isBusinessException(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('BusinessException'))
/]


[query public isException(classifier : Classifier) : Boolean =
classifier.hasStereotype(getProperty('Exception'))
/]


[query public isRemote(operation : Operation) : Boolean =
hasStereotype(getProperty('Remote'))
/]


[query public isTransactional(operation : Operation) : Boolean =
hasStereotype(getProperty('Transactional'))
/]


[query public configs(model : Model) : Sequence(Class) =
model.eAllContents(Class)->select(isConfig())
/]

[query public daos(model : Model) : Sequence(Class) =
model.eAllContents(Class)->select(isDao())
/]

[query public entities(model : Model) : Sequence(Class) =
model.eAllContents(Class)->select(isEntity())
/]

[query public controllers(model : Model) : Sequence(Class) =
model.eAllContents(Class)->select(isController())
/]

[query public uis(model : Model) : Sequence(Class) =
model.eAllContents(Class)->select(isUi())
/]

[query public views(model : Model) : Sequence(Class) =
model.eAllContents(Class)->select(isView())
/]

[query public services(model : Model): Sequence(Class)=
model.eAllContents(Class)->select(isService())->filter(Class)
/]


[query public webservices(model : Model) : Sequence(Class) =
model.eAllContents(Class)->select(isService() and ownedOperation->select(isRemote())->size() > 0)
/]

[query public viewDependencies(class : Class):Sequence(Classifier)=
class.clientDependency.supplier->filter(Classifier)->select(isView())->asSequence()
/]


[query public serviceDependencies(class : Class):Sequence(Classifier)=
class.clientDependency.supplier->filter(Classifier)->select(isService())->asSequence()
/]


[query public uiDependencies(class : Class):Sequence(Classifier)=
class.clientDependency.supplier->filter(Classifier)->select(isUi())->asSequence()
/]


[query public daoDependencies(class : Class):Sequence(Classifier)=
class.clientDependency.supplier->filter(Classifier)->select(isDao())->asSequence()
/]
