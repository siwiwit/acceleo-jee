<?xml version="1.0" encoding="Cp1252"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="http://www.eclipse.org/acceleo/mt/2.6.0/core" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:expressions="http://www.eclipse.org/acceleo/mt/2.6.0/expressions" xmlns:mt="http://www.eclipse.org/acceleo/mt/2.6.0" xmlns:statements="http://www.eclipse.org/acceleo/mt/2.6.0/statements">
  <mt:ResourceSet>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.hibernate.dao-hibernate-cfg" imports="/0/@resources.6 /0/@resources.7 /0/@resources.8 /0/@resources.9" beginTag="&lt;%" endTag="%>">
      <scripts begin="900" end="1652">
        <descriptor begin="819" end="896" name="generate" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="856" end="875">
              <expression xsi:type="expressions:CallSet" begin="856" end="875">
                <calls begin="856" end="875" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="877" end="895" value="/hibernate.cfg.xml"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="900" end="1205" value="&lt;?xml version='1.0' encoding='utf-8'?>&#xD;&#xA;&lt;!DOCTYPE hibernate-configuration&#xD;&#xA;    PUBLIC &quot;-//Hibernate/Hibernate Configuration DTD//EN&quot;&#xD;&#xA;    &quot;http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;>&#xD;&#xA;&#xD;&#xA;&lt;hibernate-configuration>&#xD;&#xA;&#xD;&#xA;    &lt;session-factory>&#xD;&#xA;&#xD;&#xA;        &lt;!-- mapping files -->&#xD;&#xA;        &#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1211" end="1383">
          <iterator xsi:type="expressions:Parenthesis" begin="1211" end="1253">
            <expression xsi:type="expressions:CallSet" begin="1212" end="1252">
              <calls begin="1212" end="1236" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1228" end="1235" value="Class"/>
              </calls>
              <calls begin="1237" end="1252" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1244" end="1251" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1261" end="1378">
            <condition xsi:type="expressions:Parenthesis" begin="1261" end="1295">
              <expression xsi:type="expressions:Operator" begin="1262" end="1294" operator="&amp;&amp;">
                <operands xsi:type="expressions:CallSet" begin="1262" end="1270">
                  <calls begin="1262" end="1270" name="isEntity" prefix=""/>
                </operands>
                <operands xsi:type="expressions:CallSet" begin="1274" end="1294">
                  <calls begin="1274" end="1284" name="superClass" prefix=""/>
                  <calls begin="1285" end="1294" name="isEmpty" prefix=""/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1300" end="1327" value="        &lt;mapping resource=&quot;"/>
            <thenStatements xsi:type="statements:Feature" begin="1329" end="1354">
              <expression xsi:type="expressions:CallSet" begin="1329" end="1354">
                <calls begin="1329" end="1345" name="hibernatePackage" prefix=""/>
                <calls begin="1346" end="1354" name="toPath" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1356" end="1357" value="/"/>
            <thenStatements xsi:type="statements:Feature" begin="1359" end="1363">
              <expression xsi:type="expressions:CallSet" begin="1359" end="1363">
                <calls begin="1359" end="1363" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1365" end="1378" value=".hbm.xml&quot;/>&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="1390" end="1405" value="&#xD;&#xA;        &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="1407" end="1420">
          <expression xsi:type="expressions:CallSet" begin="1407" end="1420">
            <calls begin="1407" end="1420" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1422" end="1454" value=" of listeners -->&#xD;&#xA;        &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="1456" end="1467">
          <expression xsi:type="expressions:CallSet" begin="1456" end="1467">
            <calls begin="1456" end="1467" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1469" end="1525" value=" of listeners -->&#xD;&#xA;&#xD;&#xA;    &lt;/session-factory>&#xD;&#xA;&#xD;&#xA;    &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="1527" end="1540">
          <expression xsi:type="expressions:CallSet" begin="1527" end="1540">
            <calls begin="1527" end="1540" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1542" end="1580" value=" of security parameters -->&#xD;&#xA;    &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="1582" end="1593">
          <expression xsi:type="expressions:CallSet" begin="1582" end="1593">
            <calls begin="1582" end="1593" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1595" end="1652" value=" of security parameters -->&#xD;&#xA;&#xD;&#xA;&lt;/hibernate-configuration>"/>
      </scripts>
      <scripts begin="1705" end="1729">
        <descriptor begin="1665" end="1701" name="hibernatePackage" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1707" end="1717">
          <expression xsi:type="expressions:CallSet" begin="1707" end="1717">
            <calls begin="1707" end="1717" name="daoPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1719" end="1729" value=".hibernate"/>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.hibernate.dao-hibernate-common" imports="/0/@resources.6" beginTag="&lt;%" endTag="%>">
      <scripts begin="750" end="820">
        <descriptor begin="705" end="746" name="importHibernateUtil" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="750" end="757" value="import "/>
        <statements xsi:type="statements:Feature" begin="759" end="795">
          <expression xsi:type="expressions:CallSet" begin="759" end="795">
            <calls begin="759" end="795" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="771" end="794" value="hibernateUtil.package"/>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="797" end="798" value="."/>
        <statements xsi:type="statements:Feature" begin="800" end="817">
          <expression xsi:type="expressions:CallSet" begin="800" end="817">
            <calls begin="800" end="817" name="hibernateUtilName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="819" end="820" value=";"/>
      </scripts>
      <scripts begin="876" end="913">
        <descriptor begin="833" end="872" name="hibernateUtilName" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="878" end="911">
          <expression xsi:type="expressions:CallSet" begin="878" end="911">
            <calls begin="878" end="911" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="890" end="910" value="hibernateUtil.name"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="978" end="1498">
        <descriptor begin="926" end="974" name="hibernatePackage" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="969" end="973">
            <calls begin="969" end="973" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="983" end="1493">
          <condition xsi:type="expressions:Parenthesis" begin="983" end="1019">
            <expression xsi:type="expressions:Operator" begin="984" end="1018" operator="==">
              <operands xsi:type="expressions:CallSet" begin="984" end="1012">
                <calls begin="984" end="1012" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="996" end="1011" value="useDaoPackage"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="1014" end="1018" value="no"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1024" end="1028" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="1030" end="1055">
            <expression xsi:type="expressions:CallSet" begin="1030" end="1055">
              <calls begin="1030" end="1037" name="package" prefix=""/>
              <calls begin="1038" end="1055" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Feature" begin="1059" end="1099">
            <expression xsi:type="expressions:CallSet" begin="1059" end="1099">
              <calls begin="1059" end="1099" name="insertInPackage" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1075" end="1098" value="dao.hibernate.package"/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1101" end="1103" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="1115" end="1115" value=""/>
          <elseStatements xsi:type="statements:If" begin="1124" end="1486">
            <condition xsi:type="expressions:Parenthesis" begin="1124" end="1177">
              <expression xsi:type="expressions:Operator" begin="1125" end="1176" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1125" end="1166">
                  <calls begin="1125" end="1166" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1137" end="1165" value="use.functional.disposition"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1170" end="1176" value="true"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1182" end="1186" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="1188" end="1199">
              <expression xsi:type="expressions:CallSet" begin="1188" end="1199">
                <calls begin="1188" end="1199" name="baseImports" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1201" end="1202" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1204" end="1215">
              <expression xsi:type="expressions:CallSet" begin="1204" end="1215">
                <calls begin="1204" end="1215" name="projectName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1217" end="1218" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1220" end="1242">
              <expression xsi:type="expressions:CallSet" begin="1220" end="1242">
                <calls begin="1220" end="1227" name="package" prefix=""/>
                <calls begin="1228" end="1242" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1246" end="1276">
              <expression xsi:type="expressions:CallSet" begin="1246" end="1276">
                <calls begin="1246" end="1276" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1262" end="1275" value="dao.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1280" end="1320">
              <expression xsi:type="expressions:CallSet" begin="1280" end="1320">
                <calls begin="1280" end="1320" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1296" end="1319" value="dao.hibernate.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1322" end="1324" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1340" end="1344" value="    "/>
            <elseStatements xsi:type="statements:Feature" begin="1346" end="1357">
              <expression xsi:type="expressions:CallSet" begin="1346" end="1357">
                <calls begin="1346" end="1357" name="baseImports" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1359" end="1360" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1362" end="1373">
              <expression xsi:type="expressions:CallSet" begin="1362" end="1373">
                <calls begin="1362" end="1373" name="projectName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1377" end="1407">
              <expression xsi:type="expressions:CallSet" begin="1377" end="1407">
                <calls begin="1377" end="1407" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1393" end="1406" value="dao.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1409" end="1410" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1412" end="1434">
              <expression xsi:type="expressions:CallSet" begin="1412" end="1434">
                <calls begin="1412" end="1419" name="package" prefix=""/>
                <calls begin="1420" end="1434" name="normalizedName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1438" end="1478">
              <expression xsi:type="expressions:CallSet" begin="1438" end="1478">
                <calls begin="1438" end="1478" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1454" end="1477" value="dao.hibernate.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1480" end="1482" value="&#xD;&#xA;"/>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="1567" end="2102">
        <descriptor begin="1511" end="1563" name="hibernateTestPackage" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="1558" end="1562">
            <calls begin="1558" end="1562" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="1572" end="2097">
          <condition xsi:type="expressions:Parenthesis" begin="1572" end="1608">
            <expression xsi:type="expressions:Operator" begin="1573" end="1607" operator="==">
              <operands xsi:type="expressions:CallSet" begin="1573" end="1601">
                <calls begin="1573" end="1601" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1585" end="1600" value="useDaoPackage"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="1603" end="1607" value="no"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1613" end="1617" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="1619" end="1644">
            <expression xsi:type="expressions:CallSet" begin="1619" end="1644">
              <calls begin="1619" end="1626" name="package" prefix=""/>
              <calls begin="1627" end="1644" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Feature" begin="1648" end="1693">
            <expression xsi:type="expressions:CallSet" begin="1648" end="1693">
              <calls begin="1648" end="1693" name="insertInPackage" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1664" end="1692" value="dao.hibernate.test.package"/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1695" end="1697" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="1709" end="1709" value=""/>
          <elseStatements xsi:type="statements:If" begin="1718" end="2090">
            <condition xsi:type="expressions:Parenthesis" begin="1718" end="1771">
              <expression xsi:type="expressions:Operator" begin="1719" end="1770" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1719" end="1760">
                  <calls begin="1719" end="1760" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1731" end="1759" value="use.functional.disposition"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1764" end="1770" value="true"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1776" end="1780" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="1782" end="1793">
              <expression xsi:type="expressions:CallSet" begin="1782" end="1793">
                <calls begin="1782" end="1793" name="baseImports" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1795" end="1796" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1798" end="1809">
              <expression xsi:type="expressions:CallSet" begin="1798" end="1809">
                <calls begin="1798" end="1809" name="projectName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1811" end="1812" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1814" end="1836">
              <expression xsi:type="expressions:CallSet" begin="1814" end="1836">
                <calls begin="1814" end="1821" name="package" prefix=""/>
                <calls begin="1822" end="1836" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1840" end="1870">
              <expression xsi:type="expressions:CallSet" begin="1840" end="1870">
                <calls begin="1840" end="1870" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1856" end="1869" value="dao.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1874" end="1919">
              <expression xsi:type="expressions:CallSet" begin="1874" end="1919">
                <calls begin="1874" end="1919" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1890" end="1918" value="dao.hibernate.test.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1921" end="1923" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1939" end="1943" value="    "/>
            <elseStatements xsi:type="statements:Feature" begin="1945" end="1956">
              <expression xsi:type="expressions:CallSet" begin="1945" end="1956">
                <calls begin="1945" end="1956" name="baseImports" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1958" end="1959" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1961" end="1972">
              <expression xsi:type="expressions:CallSet" begin="1961" end="1972">
                <calls begin="1961" end="1972" name="projectName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1976" end="2006">
              <expression xsi:type="expressions:CallSet" begin="1976" end="2006">
                <calls begin="1976" end="2006" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1992" end="2005" value="dao.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="2008" end="2009" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="2011" end="2033">
              <expression xsi:type="expressions:CallSet" begin="2011" end="2033">
                <calls begin="2011" end="2018" name="package" prefix=""/>
                <calls begin="2019" end="2033" name="normalizedName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="2037" end="2082">
              <expression xsi:type="expressions:CallSet" begin="2037" end="2082">
                <calls begin="2037" end="2082" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2053" end="2081" value="dao.hibernate.test.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="2084" end="2086" value="&#xD;&#xA;"/>
          </elseStatements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.hibernate.dao-hibernate-dao.properties" imports="/0/@resources.6 /0/@resources.7 /0/@resources.8 /0/@resources.9" beginTag="&lt;%" endTag="%>">
      <scripts begin="1062" end="1241">
        <descriptor begin="974" end="1058" name="generateProperties" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="1021" end="1040">
              <expression xsi:type="expressions:CallSet" begin="1021" end="1040">
                <calls begin="1021" end="1040" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1042" end="1057" value="/dao.properties"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:For" begin="1068" end="1236">
          <iterator xsi:type="expressions:Parenthesis" begin="1068" end="1110">
            <expression xsi:type="expressions:CallSet" begin="1069" end="1109">
              <calls begin="1069" end="1093" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1085" end="1092" value="Class"/>
              </calls>
              <calls begin="1094" end="1109" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1101" end="1108" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1115" end="1115" value=""/>
          <statements xsi:type="statements:If" begin="1124" end="1229">
            <condition xsi:type="expressions:Parenthesis" begin="1124" end="1143">
              <expression xsi:type="expressions:Operator" begin="1125" end="1142" operator="||">
                <operands xsi:type="expressions:CallSet" begin="1125" end="1133">
                  <calls begin="1125" end="1133" name="isEntity" prefix=""/>
                </operands>
                <operands xsi:type="expressions:CallSet" begin="1137" end="1142">
                  <calls begin="1137" end="1142" name="isDao" prefix=""/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Feature" begin="1150" end="1175">
              <expression xsi:type="expressions:CallSet" begin="1150" end="1175">
                <calls begin="1150" end="1175" name="daoInterfaceQualifiedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1177" end="1178" value="="/>
            <thenStatements xsi:type="statements:Feature" begin="1180" end="1190">
              <expression xsi:type="expressions:CallSet" begin="1180" end="1190">
                <calls begin="1180" end="1190" name="daoPackage" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1192" end="1212" value=".hibernate.Hibernate"/>
            <thenStatements xsi:type="statements:Feature" begin="1214" end="1218">
              <expression xsi:type="expressions:CallSet" begin="1214" end="1218">
                <calls begin="1214" end="1218" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1220" end="1225" value="Dao&#xD;&#xA;"/>
          </statements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.hibernate.dao-hibernate-direct-test-junit" imports="/0/@resources.6 /0/@resources.1 /0/@resources.7 /0/@resources.8 /0/@resources.9" beginTag="&lt;%" endTag="%>">
      <scripts begin="1060" end="1169">
        <descriptor begin="1024" end="1056" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1065" end="1164">
          <condition xsi:type="expressions:Parenthesis" begin="1065" end="1075">
            <expression xsi:type="expressions:CallSet" begin="1066" end="1074">
              <calls begin="1066" end="1074" name="isEntity" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1082" end="1096">
            <expression xsi:type="expressions:CallSet" begin="1082" end="1096">
              <calls begin="1082" end="1096" name="pathToTestJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1098" end="1099" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1101" end="1130">
            <expression xsi:type="expressions:CallSet" begin="1101" end="1130">
              <calls begin="1101" end="1121" name="hibernateTestPackage" prefix=""/>
              <calls begin="1122" end="1130" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1132" end="1133" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1135" end="1151">
            <expression xsi:type="expressions:CallSet" begin="1135" end="1151">
              <calls begin="1135" end="1151" name="daoInterfaceName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1153" end="1164" value="Test.java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1238" end="12745">
        <descriptor begin="1182" end="1234" name="generate" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1219" end="1231">
              <expression xsi:type="expressions:CallSet" begin="1219" end="1231">
                <calls begin="1219" end="1231" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1238" end="1246" value="package "/>
        <statements xsi:type="statements:Feature" begin="1248" end="1268">
          <expression xsi:type="expressions:CallSet" begin="1248" end="1268">
            <calls begin="1248" end="1268" name="hibernateTestPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1270" end="1278" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1280" end="1293">
          <expression xsi:type="expressions:CallSet" begin="1280" end="1293">
            <calls begin="1280" end="1293" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1295" end="1309" value=" for import &#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="1314" end="1388">
          <condition xsi:type="expressions:Parenthesis" begin="1314" end="1359">
            <expression xsi:type="expressions:CallSet" begin="1315" end="1358">
              <calls begin="1315" end="1324" name="attribute" prefix="">
                <filter xsi:type="expressions:Operator" begin="1325" end="1357" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="1325" end="1347">
                    <calls begin="1325" end="1329" name="type" prefix=""/>
                    <calls begin="1330" end="1347" name="convertToJavaType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1351" end="1357" value="Date"/>
                </filter>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1364" end="1388" value="import java.util.Date;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:If" begin="1400" end="1546">
          <condition xsi:type="expressions:Parenthesis" begin="1400" end="1488">
            <expression xsi:type="expressions:CallSet" begin="1401" end="1487">
              <calls begin="1401" end="1410" name="attribute" prefix=""/>
              <calls begin="1411" end="1452" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1431" end="1444" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="1446" end="1451"/>
              </calls>
              <calls begin="1453" end="1487" name="select" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1460" end="1486" value="upper > 1 || upper == -1"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1493" end="1546" value="import java.util.ArrayList;&#xD;&#xA;import java.util.List;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="1553" end="1656" value="import org.hibernate.Transaction;&#xD;&#xA;import junit.framework.Assert;&#xD;&#xA;import junit.framework.TestCase;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1658" end="1676">
          <expression xsi:type="expressions:CallSet" begin="1658" end="1676">
            <calls begin="1658" end="1676" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1678" end="1680" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1682" end="1701">
          <expression xsi:type="expressions:CallSet" begin="1682" end="1701">
            <calls begin="1682" end="1701" name="importHibernateUtil" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1703" end="1712" value="&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1714" end="1762">
          <expression xsi:type="expressions:CallSet" begin="1714" end="1762">
            <calls begin="1714" end="1733" name="eContainer" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1725" end="1732" value="Model"/>
            </calls>
            <calls begin="1734" end="1762" name="daoFactoryQualifiedClassName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1764" end="1774" value=";&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1776" end="1801">
          <expression xsi:type="expressions:CallSet" begin="1776" end="1801">
            <calls begin="1776" end="1801" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1803" end="1813" value=";&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1815" end="1834">
          <expression xsi:type="expressions:CallSet" begin="1815" end="1834">
            <calls begin="1815" end="1834" name="entityQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1836" end="1839" value=";&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1845" end="1978">
          <iterator xsi:type="expressions:Parenthesis" begin="1845" end="1910">
            <expression xsi:type="expressions:CallSet" begin="1846" end="1909">
              <calls begin="1846" end="1863" name="getAssociations" prefix=""/>
              <calls begin="1864" end="1894" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="1884" end="1893">
                  <calls begin="1884" end="1893" name="current" prefix=""/>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="1895" end="1908">
                  <calls begin="1895" end="1908" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1918" end="1973">
            <condition xsi:type="expressions:Parenthesis" begin="1918" end="1930">
              <expression xsi:type="expressions:Operator" begin="1919" end="1929" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="1919" end="1924">
                  <calls begin="1919" end="1924" name="lower" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1928" end="1929"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1935" end="1942" value="import "/>
            <thenStatements xsi:type="statements:Feature" begin="1944" end="1968">
              <expression xsi:type="expressions:CallSet" begin="1944" end="1968">
                <calls begin="1944" end="1948" name="type" prefix=""/>
                <calls begin="1949" end="1968" name="entityQualifiedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1970" end="1973" value=";&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="1985" end="1990" value="&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1992" end="2003">
          <expression xsi:type="expressions:CallSet" begin="1992" end="2003">
            <calls begin="1992" end="2003" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2005" end="2043" value=" for import&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA; * Test class for "/>
        <statements xsi:type="statements:Feature" begin="2045" end="2061">
          <expression xsi:type="expressions:CallSet" begin="2045" end="2061">
            <calls begin="2045" end="2061" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2063" end="2084" value=".&#xD;&#xA; */&#xD;&#xA;public class "/>
        <statements xsi:type="statements:Feature" begin="2086" end="2102">
          <expression xsi:type="expressions:CallSet" begin="2086" end="2102">
            <calls begin="2086" end="2102" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2104" end="2165" value="Test extends TestCase {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * The DAO for class "/>
        <statements xsi:type="statements:Feature" begin="2167" end="2171">
          <expression xsi:type="expressions:CallSet" begin="2167" end="2171">
            <calls begin="2167" end="2171" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2173" end="2197" value=".&#xD;&#xA;     */&#xD;&#xA;    private "/>
        <statements xsi:type="statements:Feature" begin="2199" end="2215">
          <expression xsi:type="expressions:CallSet" begin="2199" end="2215">
            <calls begin="2199" end="2215" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2217" end="2597" value=" dao;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * The transaction that will be used.&#xD;&#xA;     */&#xD;&#xA;    private Transaction tx;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Sets up the test before its execution, by creating the dao and the&#xD;&#xA;     * transaction.&#xD;&#xA;     * @throws Exception if an unexpected exception occurs.&#xD;&#xA;     */&#xD;&#xA;    @Override&#xD;&#xA;    protected void setUp() throws Exception {&#xD;&#xA;        super.setUp();&#xD;&#xA;        dao = "/>
        <statements xsi:type="statements:Feature" begin="2599" end="2621">
          <expression xsi:type="expressions:CallSet" begin="2599" end="2621">
            <calls begin="2599" end="2610" name="projectName" prefix=""/>
            <calls begin="2611" end="2621" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2623" end="2637" value="DaoFactory.get"/>
        <statements xsi:type="statements:Feature" begin="2639" end="2643">
          <expression xsi:type="expressions:CallSet" begin="2639" end="2643">
            <calls begin="2639" end="2643" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2645" end="3190" value="Dao();&#xD;&#xA;        tx = HibernateUtil.currentSession().beginTransaction();&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Cleans up the test after its execution, by commiting the transaction in&#xD;&#xA;     * order for the DB changes to become visible, and closing hibernate's&#xD;&#xA;     * session.&#xD;&#xA;     * @throws Exception if an unexpected exception occurs.&#xD;&#xA;     */&#xD;&#xA;    @Override&#xD;&#xA;    protected void tearDown() throws Exception {&#xD;&#xA;        super.tearDown();&#xD;&#xA;        tx.commit();&#xD;&#xA;        HibernateUtil.closeSession();&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Tests the creation of the entity "/>
        <statements xsi:type="statements:Feature" begin="3192" end="3196">
          <expression xsi:type="expressions:CallSet" begin="3192" end="3196">
            <calls begin="3192" end="3196" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3198" end="3432" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create an entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Search the entity and verify it exists&lt;/li>&lt;/ul>&#xD;&#xA;     * @throws DaoException if an unexpected DAO exception occurs.&#xD;&#xA;     */&#xD;&#xA;    public final void testCreate"/>
        <statements xsi:type="statements:Feature" begin="3434" end="3438">
          <expression xsi:type="expressions:CallSet" begin="3434" end="3438">
            <calls begin="3434" end="3438" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3440" end="3522" value="() throws DaoException {&#xD;&#xA;        // fill attributes with example values&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="3524" end="3528">
          <expression xsi:type="expressions:CallSet" begin="3524" end="3528">
            <calls begin="3524" end="3528" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3530" end="3531" value=" "/>
        <statements xsi:type="statements:Feature" begin="3533" end="3548">
          <expression xsi:type="expressions:CallSet" begin="3533" end="3548">
            <calls begin="3533" end="3537" name="name" prefix=""/>
            <calls begin="3538" end="3548" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3550" end="3556" value=" = get"/>
        <statements xsi:type="statements:Feature" begin="3558" end="3562">
          <expression xsi:type="expressions:CallSet" begin="3558" end="3562">
            <calls begin="3558" end="3562" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3564" end="3640" value="Example();&#xD;&#xA;        &#xD;&#xA;        // Execute the tested code&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="3642" end="3646">
          <expression xsi:type="expressions:CallSet" begin="3642" end="3646">
            <calls begin="3642" end="3646" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3648" end="3649" value="("/>
        <statements xsi:type="statements:Feature" begin="3651" end="3666">
          <expression xsi:type="expressions:CallSet" begin="3651" end="3666">
            <calls begin="3651" end="3655" name="name" prefix=""/>
            <calls begin="3656" end="3666" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3668" end="3745" value=");&#xD;&#xA;&#xD;&#xA;        // Verify result&#xD;&#xA;        boolean found = false;&#xD;&#xA;        for ("/>
        <statements xsi:type="statements:Feature" begin="3747" end="3751">
          <expression xsi:type="expressions:CallSet" begin="3747" end="3751">
            <calls begin="3747" end="3751" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3753" end="3761" value=" current"/>
        <statements xsi:type="statements:Feature" begin="3763" end="3767">
          <expression xsi:type="expressions:CallSet" begin="3763" end="3767">
            <calls begin="3763" end="3767" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3769" end="3783" value=" : dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="3785" end="3789">
          <expression xsi:type="expressions:CallSet" begin="3785" end="3789">
            <calls begin="3785" end="3789" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3791" end="3822" value="s()) {&#xD;&#xA;            if (current"/>
        <statements xsi:type="statements:Feature" begin="3824" end="3828">
          <expression xsi:type="expressions:CallSet" begin="3824" end="3828">
            <calls begin="3824" end="3828" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3830" end="3838" value=".equals("/>
        <statements xsi:type="statements:Feature" begin="3840" end="3855">
          <expression xsi:type="expressions:CallSet" begin="3840" end="3855">
            <calls begin="3840" end="3844" name="name" prefix=""/>
            <calls begin="3845" end="3855" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3857" end="3947" value=")) {&#xD;&#xA;                found = true;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        Assert.assertTrue(&quot;"/>
        <statements xsi:type="statements:Feature" begin="3949" end="3953">
          <expression xsi:type="expressions:CallSet" begin="3949" end="3953">
            <calls begin="3949" end="3953" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3955" end="4039" value=" not created&quot;, found);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Test the modification of an entity "/>
        <statements xsi:type="statements:Feature" begin="4041" end="4045">
          <expression xsi:type="expressions:CallSet" begin="4041" end="4045">
            <calls begin="4041" end="4045" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4047" end="4335" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create an entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Modify the entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 3 : Search the entity and verify the modified values&lt;/li>&lt;/ul>&#xD;&#xA;     * @throws DaoException if an unexpected DAO exception occurs.&#xD;&#xA;     */&#xD;&#xA;    public final void testUpdate"/>
        <statements xsi:type="statements:Feature" begin="4337" end="4341">
          <expression xsi:type="expressions:CallSet" begin="4337" end="4341">
            <calls begin="4337" end="4341" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4343" end="4410" value="() throws DaoException {&#xD;&#xA;        // Initialized the test&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="4412" end="4416">
          <expression xsi:type="expressions:CallSet" begin="4412" end="4416">
            <calls begin="4412" end="4416" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4418" end="4419" value=" "/>
        <statements xsi:type="statements:Feature" begin="4421" end="4436">
          <expression xsi:type="expressions:CallSet" begin="4421" end="4436">
            <calls begin="4421" end="4425" name="name" prefix=""/>
            <calls begin="4426" end="4436" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4438" end="4444" value=" = get"/>
        <statements xsi:type="statements:Feature" begin="4446" end="4450">
          <expression xsi:type="expressions:CallSet" begin="4446" end="4450">
            <calls begin="4446" end="4450" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4452" end="4482" value="Example();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="4484" end="4488">
          <expression xsi:type="expressions:CallSet" begin="4484" end="4488">
            <calls begin="4484" end="4488" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4490" end="4491" value="("/>
        <statements xsi:type="statements:Feature" begin="4493" end="4508">
          <expression xsi:type="expressions:CallSet" begin="4493" end="4508">
            <calls begin="4493" end="4497" name="name" prefix=""/>
            <calls begin="4498" end="4508" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4510" end="4552" value=");&#xD;&#xA;&#xD;&#xA;        // Execute the tested code&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="4566" end="4830">
          <iterator xsi:type="expressions:Parenthesis" begin="4566" end="4619">
            <expression xsi:type="expressions:CallSet" begin="4567" end="4618">
              <calls begin="4567" end="4576" name="attribute" prefix=""/>
              <calls begin="4577" end="4618" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="4597" end="4610" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="4612" end="4617"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="4624" end="4624" value=""/>
          <statements xsi:type="statements:If" begin="4641" end="4815">
            <condition xsi:type="expressions:Parenthesis" begin="4641" end="4719">
              <expression xsi:type="expressions:Operator" begin="4642" end="4718" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="4642" end="4675">
                  <expression xsi:type="expressions:CallSet" begin="4643" end="4675">
                    <calls begin="4643" end="4675" name="hasStereotype" prefix="">
                      <arguments xsi:type="expressions:CallSet" begin="4657" end="4674">
                        <calls begin="4657" end="4674" name="getProperty" prefix="">
                          <arguments xsi:type="expressions:StringLiteral" begin="4669" end="4673" value="id"/>
                        </calls>
                      </arguments>
                    </calls>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Operator" begin="4679" end="4689" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="4679" end="4684">
                    <calls begin="4679" end="4684" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="4688" end="4689" value="1"/>
                </operands>
                <operands xsi:type="expressions:Not" begin="4693" end="4703">
                  <expression xsi:type="expressions:CallSet" begin="4694" end="4703">
                    <calls begin="4694" end="4703" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="4707" end="4718">
                  <expression xsi:type="expressions:CallSet" begin="4708" end="4718">
                    <calls begin="4708" end="4718" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4724" end="4732" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="4734" end="4755">
              <expression xsi:type="expressions:CallSet" begin="4734" end="4755">
                <calls begin="4734" end="4739" name="class" prefix=""/>
                <calls begin="4740" end="4744" name="name" prefix=""/>
                <calls begin="4745" end="4755" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4757" end="4761" value=".set"/>
            <thenStatements xsi:type="statements:Feature" begin="4763" end="4778">
              <expression xsi:type="expressions:CallSet" begin="4763" end="4778">
                <calls begin="4763" end="4767" name="name" prefix=""/>
                <calls begin="4768" end="4778" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4780" end="4781" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="4783" end="4797">
              <expression xsi:type="expressions:CallSet" begin="4783" end="4797">
                <calls begin="4783" end="4797" name="exampleValues2" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4799" end="4803" value=");&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="4837" end="4855" value="        dao.update"/>
        <statements xsi:type="statements:Feature" begin="4857" end="4861">
          <expression xsi:type="expressions:CallSet" begin="4857" end="4861">
            <calls begin="4857" end="4861" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4863" end="4864" value="("/>
        <statements xsi:type="statements:Feature" begin="4866" end="4881">
          <expression xsi:type="expressions:CallSet" begin="4866" end="4881">
            <calls begin="4866" end="4870" name="name" prefix=""/>
            <calls begin="4871" end="4881" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4883" end="4960" value=");&#xD;&#xA;&#xD;&#xA;        // Verify result&#xD;&#xA;        boolean found = false;&#xD;&#xA;        for ("/>
        <statements xsi:type="statements:Feature" begin="4962" end="4966">
          <expression xsi:type="expressions:CallSet" begin="4962" end="4966">
            <calls begin="4962" end="4966" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4968" end="4976" value=" current"/>
        <statements xsi:type="statements:Feature" begin="4978" end="4982">
          <expression xsi:type="expressions:CallSet" begin="4978" end="4982">
            <calls begin="4978" end="4982" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4984" end="4998" value=" : dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="5000" end="5004">
          <expression xsi:type="expressions:CallSet" begin="5000" end="5004">
            <calls begin="5000" end="5004" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5006" end="5037" value="s()) {&#xD;&#xA;            if (current"/>
        <statements xsi:type="statements:Feature" begin="5039" end="5043">
          <expression xsi:type="expressions:CallSet" begin="5039" end="5043">
            <calls begin="5039" end="5043" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5045" end="5053" value=".equals("/>
        <statements xsi:type="statements:Feature" begin="5055" end="5070">
          <expression xsi:type="expressions:CallSet" begin="5055" end="5070">
            <calls begin="5055" end="5059" name="name" prefix=""/>
            <calls begin="5060" end="5070" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5072" end="5109" value=")) {&#xD;&#xA;                found = true;&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="5131" end="5575">
          <iterator xsi:type="expressions:Parenthesis" begin="5131" end="5203">
            <expression xsi:type="expressions:CallSet" begin="5132" end="5202">
              <calls begin="5132" end="5141" name="attribute" prefix=""/>
              <calls begin="5142" end="5183" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="5162" end="5175" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="5177" end="5182"/>
              </calls>
              <calls begin="5184" end="5202" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="5191" end="5201" value="Property"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="5208" end="5208" value=""/>
          <statements xsi:type="statements:If" begin="5233" end="5552">
            <condition xsi:type="expressions:Parenthesis" begin="5233" end="5311">
              <expression xsi:type="expressions:Operator" begin="5234" end="5310" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="5234" end="5267">
                  <expression xsi:type="expressions:CallSet" begin="5235" end="5267">
                    <calls begin="5235" end="5267" name="hasStereotype" prefix="">
                      <arguments xsi:type="expressions:CallSet" begin="5249" end="5266">
                        <calls begin="5249" end="5266" name="getProperty" prefix="">
                          <arguments xsi:type="expressions:StringLiteral" begin="5261" end="5265" value="id"/>
                        </calls>
                      </arguments>
                    </calls>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Operator" begin="5271" end="5281" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="5271" end="5276">
                    <calls begin="5271" end="5276" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="5280" end="5281" value="1"/>
                </operands>
                <operands xsi:type="expressions:Not" begin="5285" end="5295">
                  <expression xsi:type="expressions:CallSet" begin="5286" end="5295">
                    <calls begin="5286" end="5295" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="5299" end="5310">
                  <expression xsi:type="expressions:CallSet" begin="5300" end="5310">
                    <calls begin="5300" end="5310" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="5316" end="5359" value="                Assert.assertEquals(&quot;Value "/>
            <thenStatements xsi:type="statements:Feature" begin="5361" end="5376">
              <expression xsi:type="expressions:CallSet" begin="5361" end="5376">
                <calls begin="5361" end="5365" name="name" prefix=""/>
                <calls begin="5366" end="5376" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5378" end="5419" value=" not modified&quot;,&#xD;&#xA;                        "/>
            <thenStatements xsi:type="statements:Feature" begin="5421" end="5435">
              <expression xsi:type="expressions:CallSet" begin="5421" end="5435">
                <calls begin="5421" end="5435" name="exampleValues2" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5437" end="5464" value=",&#xD;&#xA;                        "/>
            <thenStatements xsi:type="statements:Feature" begin="5466" end="5501">
              <expression xsi:type="expressions:CallSet" begin="5466" end="5501">
                <calls begin="5466" end="5485" name="featuringClassifier" prefix=""/>
                <calls begin="5486" end="5490" name="name" prefix=""/>
                <calls begin="5491" end="5501" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5503" end="5507" value=".get"/>
            <thenStatements xsi:type="statements:Feature" begin="5509" end="5524">
              <expression xsi:type="expressions:CallSet" begin="5509" end="5524">
                <calls begin="5509" end="5513" name="name" prefix=""/>
                <calls begin="5514" end="5524" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5526" end="5532" value="());&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="5582" end="5635" value="            }&#xD;&#xA;        }&#xD;&#xA;        Assert.assertTrue(&quot;"/>
        <statements xsi:type="statements:Feature" begin="5637" end="5641">
          <expression xsi:type="expressions:CallSet" begin="5637" end="5641">
            <calls begin="5637" end="5641" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5643" end="5724" value=" not found&quot;, found);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Test the suppression of an entity "/>
        <statements xsi:type="statements:Feature" begin="5726" end="5730">
          <expression xsi:type="expressions:CallSet" begin="5726" end="5730">
            <calls begin="5726" end="5730" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5732" end="6034" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create an entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Delete the entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 3 : Search the entity and verify it doesn't exist anymore&lt;/li>&#xD;&#xA;     * &lt;/ul>&#xD;&#xA;     * @throws DaoException if an unexpected DAO exception occurs.&#xD;&#xA;     */&#xD;&#xA;    public final void testDelete"/>
        <statements xsi:type="statements:Feature" begin="6036" end="6040">
          <expression xsi:type="expressions:CallSet" begin="6036" end="6040">
            <calls begin="6036" end="6040" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6042" end="6109" value="() throws DaoException {&#xD;&#xA;        // Initialized the test&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="6111" end="6115">
          <expression xsi:type="expressions:CallSet" begin="6111" end="6115">
            <calls begin="6111" end="6115" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6117" end="6118" value=" "/>
        <statements xsi:type="statements:Feature" begin="6120" end="6135">
          <expression xsi:type="expressions:CallSet" begin="6120" end="6135">
            <calls begin="6120" end="6124" name="name" prefix=""/>
            <calls begin="6125" end="6135" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6137" end="6143" value=" = get"/>
        <statements xsi:type="statements:Feature" begin="6145" end="6149">
          <expression xsi:type="expressions:CallSet" begin="6145" end="6149">
            <calls begin="6145" end="6149" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6151" end="6181" value="Example();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="6183" end="6187">
          <expression xsi:type="expressions:CallSet" begin="6183" end="6187">
            <calls begin="6183" end="6187" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6189" end="6190" value="("/>
        <statements xsi:type="statements:Feature" begin="6192" end="6207">
          <expression xsi:type="expressions:CallSet" begin="6192" end="6207">
            <calls begin="6192" end="6196" name="name" prefix=""/>
            <calls begin="6197" end="6207" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6209" end="6277" value=");&#xD;&#xA;        &#xD;&#xA;        // Execute the tested code&#xD;&#xA;        dao.delete"/>
        <statements xsi:type="statements:Feature" begin="6279" end="6283">
          <expression xsi:type="expressions:CallSet" begin="6279" end="6283">
            <calls begin="6279" end="6283" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6285" end="6286" value="("/>
        <statements xsi:type="statements:Feature" begin="6288" end="6303">
          <expression xsi:type="expressions:CallSet" begin="6288" end="6303">
            <calls begin="6288" end="6292" name="name" prefix=""/>
            <calls begin="6293" end="6303" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6305" end="6390" value=");&#xD;&#xA;        &#xD;&#xA;        // Verify result&#xD;&#xA;        boolean found = false;&#xD;&#xA;        for ("/>
        <statements xsi:type="statements:Feature" begin="6392" end="6396">
          <expression xsi:type="expressions:CallSet" begin="6392" end="6396">
            <calls begin="6392" end="6396" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6398" end="6406" value=" current"/>
        <statements xsi:type="statements:Feature" begin="6408" end="6412">
          <expression xsi:type="expressions:CallSet" begin="6408" end="6412">
            <calls begin="6408" end="6412" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6414" end="6428" value=" : dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="6430" end="6434">
          <expression xsi:type="expressions:CallSet" begin="6430" end="6434">
            <calls begin="6430" end="6434" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6436" end="6467" value="s()) {&#xD;&#xA;            if (current"/>
        <statements xsi:type="statements:Feature" begin="6469" end="6473">
          <expression xsi:type="expressions:CallSet" begin="6469" end="6473">
            <calls begin="6469" end="6473" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6475" end="6483" value=".equals("/>
        <statements xsi:type="statements:Feature" begin="6485" end="6500">
          <expression xsi:type="expressions:CallSet" begin="6485" end="6500">
            <calls begin="6485" end="6489" name="name" prefix=""/>
            <calls begin="6490" end="6500" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6502" end="6609" value=")) {&#xD;&#xA;                found = true;                &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        Assert.assertFalse(&quot;"/>
        <statements xsi:type="statements:Feature" begin="6611" end="6615">
          <expression xsi:type="expressions:CallSet" begin="6611" end="6615">
            <calls begin="6611" end="6615" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6617" end="6698" value=" not deleted&quot;, found);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Test the search of all entities "/>
        <statements xsi:type="statements:Feature" begin="6700" end="6704">
          <expression xsi:type="expressions:CallSet" begin="6700" end="6704">
            <calls begin="6700" end="6704" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6706" end="6976" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create many entities&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Search all entities and verify the entities created are&#xD;&#xA;     * found&lt;/li>&lt;/ul>&#xD;&#xA;     * @throws DaoException if an unexpected DAO exception occurs.&#xD;&#xA;     */&#xD;&#xA;    public final void testFindAll"/>
        <statements xsi:type="statements:Feature" begin="6978" end="6982">
          <expression xsi:type="expressions:CallSet" begin="6978" end="6982">
            <calls begin="6978" end="6982" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6984" end="7095" value="s() throws DaoException {&#xD;&#xA;        // Verify number of element before testing&#xD;&#xA;        int before = dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="7097" end="7101">
          <expression xsi:type="expressions:CallSet" begin="7097" end="7101">
            <calls begin="7097" end="7101" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7103" end="7238" value="s().size();&#xD;&#xA;        Assert.assertTrue(&quot;FindAll must return at least 0&quot;, before >= 0);&#xD;&#xA;        &#xD;&#xA;        // Add two elements&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="7240" end="7244">
          <expression xsi:type="expressions:CallSet" begin="7240" end="7244">
            <calls begin="7240" end="7244" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7246" end="7247" value=" "/>
        <statements xsi:type="statements:Feature" begin="7249" end="7264">
          <expression xsi:type="expressions:CallSet" begin="7249" end="7264">
            <calls begin="7249" end="7253" name="name" prefix=""/>
            <calls begin="7254" end="7264" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7266" end="7273" value="1 = get"/>
        <statements xsi:type="statements:Feature" begin="7275" end="7279">
          <expression xsi:type="expressions:CallSet" begin="7275" end="7279">
            <calls begin="7275" end="7279" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7281" end="7311" value="Example();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="7313" end="7317">
          <expression xsi:type="expressions:CallSet" begin="7313" end="7317">
            <calls begin="7313" end="7317" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7319" end="7320" value="("/>
        <statements xsi:type="statements:Feature" begin="7322" end="7337">
          <expression xsi:type="expressions:CallSet" begin="7322" end="7337">
            <calls begin="7322" end="7326" name="name" prefix=""/>
            <calls begin="7327" end="7337" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7339" end="7370" value="1);&#xD;&#xA;                &#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="7372" end="7376">
          <expression xsi:type="expressions:CallSet" begin="7372" end="7376">
            <calls begin="7372" end="7376" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7378" end="7379" value=" "/>
        <statements xsi:type="statements:Feature" begin="7381" end="7396">
          <expression xsi:type="expressions:CallSet" begin="7381" end="7396">
            <calls begin="7381" end="7385" name="name" prefix=""/>
            <calls begin="7386" end="7396" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7398" end="7405" value="2 = get"/>
        <statements xsi:type="statements:Feature" begin="7407" end="7411">
          <expression xsi:type="expressions:CallSet" begin="7407" end="7411">
            <calls begin="7407" end="7411" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7413" end="7443" value="Example();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="7445" end="7449">
          <expression xsi:type="expressions:CallSet" begin="7445" end="7449">
            <calls begin="7445" end="7449" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7451" end="7452" value="("/>
        <statements xsi:type="statements:Feature" begin="7454" end="7469">
          <expression xsi:type="expressions:CallSet" begin="7454" end="7469">
            <calls begin="7454" end="7458" name="name" prefix=""/>
            <calls begin="7459" end="7469" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7471" end="7535" value="2);&#xD;&#xA;&#xD;&#xA;        // Verify result&#xD;&#xA;        int after = dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="7537" end="7541">
          <expression xsi:type="expressions:CallSet" begin="7537" end="7541">
            <calls begin="7537" end="7541" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7543" end="7717" value="s().size();&#xD;&#xA;        Assert.assertEquals(&#xD;&#xA;                &quot;FindAll don't find the good number of elements&quot;, &#xD;&#xA;                2,&#xD;&#xA;                after - before);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="7719" end="7760">
          <expression xsi:type="expressions:CallSet" begin="7719" end="7760">
            <calls begin="7719" end="7726" name="feature" prefix=""/>
            <calls begin="7727" end="7747" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="7734" end="7746" value="operations"/>
            </calls>
            <calls begin="7748" end="7760" name="generateTest" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7762" end="7804" value="&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Creates an example of "/>
        <statements xsi:type="statements:Feature" begin="7806" end="7810">
          <expression xsi:type="expressions:CallSet" begin="7806" end="7810">
            <calls begin="7806" end="7810" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7812" end="7862" value=".&#xD;&#xA;     * @return Returns a new instance of class "/>
        <statements xsi:type="statements:Feature" begin="7864" end="7868">
          <expression xsi:type="expressions:CallSet" begin="7864" end="7868">
            <calls begin="7864" end="7868" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7870" end="8012" value=", with fields filled&#xD;&#xA;     * with example values.&#xD;&#xA;     * @throws DaoException if an unexpected DAO exception occurs.&#xD;&#xA;     */&#xD;&#xA;    protected "/>
        <statements xsi:type="statements:Feature" begin="8014" end="8018">
          <expression xsi:type="expressions:CallSet" begin="8014" end="8018">
            <calls begin="8014" end="8018" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8020" end="8024" value=" get"/>
        <statements xsi:type="statements:Feature" begin="8026" end="8030">
          <expression xsi:type="expressions:CallSet" begin="8026" end="8030">
            <calls begin="8026" end="8030" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8032" end="8121" value="Example() throws DaoException {&#xD;&#xA;        // fill attributes with example values&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="8123" end="8127">
          <expression xsi:type="expressions:CallSet" begin="8123" end="8127">
            <calls begin="8123" end="8127" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8129" end="8130" value=" "/>
        <statements xsi:type="statements:Feature" begin="8132" end="8147">
          <expression xsi:type="expressions:CallSet" begin="8132" end="8147">
            <calls begin="8132" end="8136" name="name" prefix=""/>
            <calls begin="8137" end="8147" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8149" end="8156" value=" = new "/>
        <statements xsi:type="statements:Feature" begin="8158" end="8162">
          <expression xsi:type="expressions:CallSet" begin="8158" end="8162">
            <calls begin="8158" end="8162" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8164" end="8169" value="();&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="8181" end="8200" value=" Member attributes "/>
        <statements xsi:type="statements:Text" begin="8206" end="8206" value=""/>
        <statements xsi:type="statements:For" begin="8220" end="8748">
          <iterator xsi:type="expressions:Parenthesis" begin="8220" end="8272">
            <expression xsi:type="expressions:CallSet" begin="8221" end="8271">
              <calls begin="8221" end="8230" name="attribute" prefix=""/>
              <calls begin="8231" end="8271" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="8251" end="8264" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="8265" end="8270"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="8277" end="8277" value=""/>
          <statements xsi:type="statements:If" begin="8294" end="8733">
            <condition xsi:type="expressions:Parenthesis" begin="8294" end="8321">
              <expression xsi:type="expressions:Operator" begin="8295" end="8320" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="8295" end="8305">
                  <expression xsi:type="expressions:CallSet" begin="8296" end="8305">
                    <calls begin="8296" end="8305" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="8309" end="8320">
                  <expression xsi:type="expressions:CallSet" begin="8310" end="8320">
                    <calls begin="8310" end="8320" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="8326" end="8326" value=""/>
            <thenStatements xsi:type="statements:If" begin="8347" end="8714">
              <condition xsi:type="expressions:Parenthesis" begin="8347" end="8359">
                <expression xsi:type="expressions:Operator" begin="8348" end="8358" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="8348" end="8353">
                    <calls begin="8348" end="8353" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="8357" end="8358" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="8364" end="8372" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="8374" end="8395">
                <expression xsi:type="expressions:CallSet" begin="8374" end="8395">
                  <calls begin="8374" end="8379" name="class" prefix=""/>
                  <calls begin="8380" end="8384" name="name" prefix=""/>
                  <calls begin="8385" end="8395" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="8397" end="8401" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="8403" end="8418">
                <expression xsi:type="expressions:CallSet" begin="8403" end="8418">
                  <calls begin="8403" end="8407" name="name" prefix=""/>
                  <calls begin="8408" end="8418" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="8420" end="8421" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="8423" end="8436">
                <expression xsi:type="expressions:CallSet" begin="8423" end="8436">
                  <calls begin="8423" end="8436" name="exampleValues" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="8438" end="8442" value=");&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="8470" end="8483" value="        List&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="8485" end="8494">
                <expression xsi:type="expressions:CallSet" begin="8485" end="8494">
                  <calls begin="8485" end="8489" name="type" prefix=""/>
                  <calls begin="8490" end="8494" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8496" end="8502" value="> list"/>
              <elseStatements xsi:type="statements:Feature" begin="8504" end="8519">
                <expression xsi:type="expressions:CallSet" begin="8504" end="8519">
                  <calls begin="8504" end="8508" name="name" prefix=""/>
                  <calls begin="8509" end="8519" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8521" end="8538" value=" = new ArrayList&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="8540" end="8549">
                <expression xsi:type="expressions:CallSet" begin="8540" end="8549">
                  <calls begin="8540" end="8544" name="type" prefix=""/>
                  <calls begin="8545" end="8549" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8551" end="8569" value=">();&#xD;&#xA;        list"/>
              <elseStatements xsi:type="statements:Feature" begin="8571" end="8586">
                <expression xsi:type="expressions:CallSet" begin="8571" end="8586">
                  <calls begin="8571" end="8575" name="name" prefix=""/>
                  <calls begin="8576" end="8586" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8588" end="8593" value=".add("/>
              <elseStatements xsi:type="statements:Feature" begin="8595" end="8608">
                <expression xsi:type="expressions:CallSet" begin="8595" end="8608">
                  <calls begin="8595" end="8608" name="exampleValues" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8610" end="8622" value=");&#xD;&#xA;        "/>
              <elseStatements xsi:type="statements:Feature" begin="8624" end="8645">
                <expression xsi:type="expressions:CallSet" begin="8624" end="8645">
                  <calls begin="8624" end="8629" name="class" prefix=""/>
                  <calls begin="8630" end="8634" name="name" prefix=""/>
                  <calls begin="8635" end="8645" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8647" end="8651" value=".set"/>
              <elseStatements xsi:type="statements:Feature" begin="8653" end="8668">
                <expression xsi:type="expressions:CallSet" begin="8653" end="8668">
                  <calls begin="8653" end="8657" name="name" prefix=""/>
                  <calls begin="8658" end="8668" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8670" end="8675" value="(list"/>
              <elseStatements xsi:type="statements:Feature" begin="8677" end="8692">
                <expression xsi:type="expressions:CallSet" begin="8677" end="8692">
                  <calls begin="8677" end="8681" name="name" prefix=""/>
                  <calls begin="8682" end="8692" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8694" end="8698" value=");&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="8755" end="8755" value=""/>
        <statements xsi:type="statements:Comment" begin="8767" end="8796" value=" Composite relation required "/>
        <statements xsi:type="statements:Text" begin="8802" end="8802" value=""/>
        <statements xsi:type="statements:For" begin="8816" end="10109">
          <iterator xsi:type="expressions:Parenthesis" begin="8816" end="8881">
            <expression xsi:type="expressions:CallSet" begin="8817" end="8880">
              <calls begin="8817" end="8834" name="getAssociations" prefix=""/>
              <calls begin="8835" end="8865" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="8855" end="8864">
                  <calls begin="8855" end="8864" name="current" prefix=""/>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="8866" end="8879">
                  <calls begin="8866" end="8879" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="8886" end="8886" value=""/>
          <statements xsi:type="statements:If" begin="8903" end="10094">
            <condition xsi:type="expressions:Parenthesis" begin="8903" end="8915">
              <expression xsi:type="expressions:Operator" begin="8904" end="8914" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="8904" end="8909">
                  <calls begin="8904" end="8909" name="lower" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="8913" end="8914"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="8920" end="8945" value="            &#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="8947" end="8960">
              <expression xsi:type="expressions:CallSet" begin="8947" end="8960">
                <calls begin="8947" end="8960" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8962" end="8978" value=" for example of "/>
            <thenStatements xsi:type="statements:Feature" begin="8980" end="8989">
              <expression xsi:type="expressions:CallSet" begin="8980" end="8989">
                <calls begin="8980" end="8984" name="type" prefix=""/>
                <calls begin="8985" end="8989" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8991" end="8992" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="8994" end="8998">
              <expression xsi:type="expressions:CallSet" begin="8994" end="8998">
                <calls begin="8994" end="8998" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9000" end="9017" value=" values&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="9019" end="9028">
              <expression xsi:type="expressions:CallSet" begin="9019" end="9028">
                <calls begin="9019" end="9023" name="type" prefix=""/>
                <calls begin="9024" end="9028" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9030" end="9031" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="9033" end="9048">
              <expression xsi:type="expressions:CallSet" begin="9033" end="9048">
                <calls begin="9033" end="9037" name="name" prefix=""/>
                <calls begin="9038" end="9048" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9050" end="9064" value="Example = new "/>
            <thenStatements xsi:type="statements:Feature" begin="9066" end="9075">
              <expression xsi:type="expressions:CallSet" begin="9066" end="9075">
                <calls begin="9066" end="9070" name="type" prefix=""/>
                <calls begin="9071" end="9075" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9077" end="9082" value="();&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="9103" end="9438">
              <condition xsi:type="expressions:Parenthesis" begin="9103" end="9115">
                <expression xsi:type="expressions:Operator" begin="9104" end="9114" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="9104" end="9109">
                    <calls begin="9104" end="9109" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="9113" end="9114" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="9120" end="9128" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="9130" end="9198">
                <expression xsi:type="expressions:CallSet" begin="9130" end="9198">
                  <calls begin="9130" end="9141" name="association" prefix=""/>
                  <calls begin="9142" end="9177" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="9162" end="9176">
                      <calls begin="9162" end="9171" name="current" prefix=""/>
                      <calls begin="9172" end="9176" name="type" prefix=""/>
                    </arguments>
                  </calls>
                  <calls begin="9178" end="9182" name="type" prefix=""/>
                  <calls begin="9183" end="9187" name="name" prefix=""/>
                  <calls begin="9188" end="9198" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="9200" end="9204" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="9206" end="9221">
                <expression xsi:type="expressions:CallSet" begin="9206" end="9221">
                  <calls begin="9206" end="9210" name="name" prefix=""/>
                  <calls begin="9211" end="9221" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="9223" end="9224" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="9226" end="9241">
                <expression xsi:type="expressions:CallSet" begin="9226" end="9241">
                  <calls begin="9226" end="9230" name="name" prefix=""/>
                  <calls begin="9231" end="9241" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="9243" end="9254" value="Example);&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="9282" end="9290" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="9292" end="9360">
                <expression xsi:type="expressions:CallSet" begin="9292" end="9360">
                  <calls begin="9292" end="9303" name="association" prefix=""/>
                  <calls begin="9304" end="9339" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="9324" end="9338">
                      <calls begin="9324" end="9333" name="current" prefix=""/>
                      <calls begin="9334" end="9338" name="type" prefix=""/>
                    </arguments>
                  </calls>
                  <calls begin="9340" end="9344" name="type" prefix=""/>
                  <calls begin="9345" end="9349" name="name" prefix=""/>
                  <calls begin="9350" end="9360" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9362" end="9366" value=".get"/>
              <elseStatements xsi:type="statements:Feature" begin="9368" end="9383">
                <expression xsi:type="expressions:CallSet" begin="9368" end="9383">
                  <calls begin="9368" end="9372" name="name" prefix=""/>
                  <calls begin="9373" end="9383" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9385" end="9392" value="().add("/>
              <elseStatements xsi:type="statements:Feature" begin="9394" end="9409">
                <expression xsi:type="expressions:CallSet" begin="9394" end="9409">
                  <calls begin="9394" end="9398" name="name" prefix=""/>
                  <calls begin="9399" end="9409" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9411" end="9422" value="Example);&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9445" end="9445" value=""/>
            <thenStatements xsi:type="statements:If" begin="9466" end="9885">
              <condition xsi:type="expressions:Parenthesis" begin="9466" end="9484">
                <expression xsi:type="expressions:Operator" begin="9467" end="9483" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="9467" end="9475">
                    <calls begin="9467" end="9475" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="9479" end="9483"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="9490" end="9490" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="9510" end="9539" value=" for bidirectionnal relation "/>
              <thenStatements xsi:type="statements:Text" begin="9545" end="9545" value=""/>
              <thenStatements xsi:type="statements:If" begin="9570" end="9862">
                <condition xsi:type="expressions:Parenthesis" begin="9570" end="9591">
                  <expression xsi:type="expressions:Operator" begin="9571" end="9590" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="9571" end="9585">
                      <calls begin="9571" end="9579" name="opposite" prefix=""/>
                      <calls begin="9580" end="9585" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="9589" end="9590" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="9596" end="9604" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="9606" end="9621">
                  <expression xsi:type="expressions:CallSet" begin="9606" end="9621">
                    <calls begin="9606" end="9610" name="name" prefix=""/>
                    <calls begin="9611" end="9621" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9623" end="9634" value="Example.set"/>
                <thenStatements xsi:type="statements:Feature" begin="9636" end="9660">
                  <expression xsi:type="expressions:CallSet" begin="9636" end="9660">
                    <calls begin="9636" end="9644" name="opposite" prefix=""/>
                    <calls begin="9645" end="9649" name="name" prefix=""/>
                    <calls begin="9650" end="9660" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9662" end="9663" value="("/>
                <thenStatements xsi:type="statements:Feature" begin="9665" end="9686">
                  <expression xsi:type="expressions:CallSet" begin="9665" end="9686">
                    <calls begin="9665" end="9670" name="class" prefix=""/>
                    <calls begin="9671" end="9675" name="name" prefix=""/>
                    <calls begin="9676" end="9686" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9688" end="9700" value=");        &#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="9732" end="9740" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="9742" end="9757">
                  <expression xsi:type="expressions:CallSet" begin="9742" end="9757">
                    <calls begin="9742" end="9746" name="name" prefix=""/>
                    <calls begin="9747" end="9757" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9759" end="9770" value="Example.get"/>
                <elseStatements xsi:type="statements:Feature" begin="9772" end="9796">
                  <expression xsi:type="expressions:CallSet" begin="9772" end="9796">
                    <calls begin="9772" end="9780" name="opposite" prefix=""/>
                    <calls begin="9781" end="9785" name="name" prefix=""/>
                    <calls begin="9786" end="9796" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9798" end="9805" value="().add("/>
                <elseStatements xsi:type="statements:Feature" begin="9807" end="9828">
                  <expression xsi:type="expressions:CallSet" begin="9807" end="9828">
                    <calls begin="9807" end="9812" name="class" prefix=""/>
                    <calls begin="9813" end="9817" name="name" prefix=""/>
                    <calls begin="9818" end="9828" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9830" end="9842" value=");        &#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9892" end="9900" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="9902" end="9924">
              <expression xsi:type="expressions:CallSet" begin="9902" end="9924">
                <calls begin="9902" end="9913" name="projectName" prefix=""/>
                <calls begin="9914" end="9924" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9926" end="9940" value="DaoFactory.get"/>
            <thenStatements xsi:type="statements:Feature" begin="9942" end="9951">
              <expression xsi:type="expressions:CallSet" begin="9942" end="9951">
                <calls begin="9942" end="9946" name="type" prefix=""/>
                <calls begin="9947" end="9951" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9953" end="9965" value="Dao().create"/>
            <thenStatements xsi:type="statements:Feature" begin="9967" end="9976">
              <expression xsi:type="expressions:CallSet" begin="9967" end="9976">
                <calls begin="9967" end="9971" name="type" prefix=""/>
                <calls begin="9972" end="9976" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9978" end="9979" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="9981" end="9996">
              <expression xsi:type="expressions:CallSet" begin="9981" end="9996">
                <calls begin="9981" end="9985" name="name" prefix=""/>
                <calls begin="9986" end="9996" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9998" end="10020" value="Example);&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="10022" end="10033">
              <expression xsi:type="expressions:CallSet" begin="10022" end="10033">
                <calls begin="10022" end="10033" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10035" end="10051" value=" for example of "/>
            <thenStatements xsi:type="statements:Feature" begin="10053" end="10062">
              <expression xsi:type="expressions:CallSet" begin="10053" end="10062">
                <calls begin="10053" end="10057" name="type" prefix=""/>
                <calls begin="10058" end="10062" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10064" end="10065" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="10067" end="10071">
              <expression xsi:type="expressions:CallSet" begin="10067" end="10071">
                <calls begin="10067" end="10071" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10073" end="10082" value=" values&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="10116" end="10141" value="        &#xD;&#xA;        return "/>
        <statements xsi:type="statements:Feature" begin="10143" end="10158">
          <expression xsi:type="expressions:CallSet" begin="10143" end="10158">
            <calls begin="10143" end="10147" name="name" prefix=""/>
            <calls begin="10148" end="10158" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10160" end="10220" value=";&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Creates a second example of "/>
        <statements xsi:type="statements:Feature" begin="10222" end="10226">
          <expression xsi:type="expressions:CallSet" begin="10222" end="10226">
            <calls begin="10222" end="10226" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10228" end="10296" value=" with other values.&#xD;&#xA;     * @return Returns a new instance of class "/>
        <statements xsi:type="statements:Feature" begin="10298" end="10302">
          <expression xsi:type="expressions:CallSet" begin="10298" end="10302">
            <calls begin="10298" end="10302" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10304" end="10448" value=" with fields filled&#xD;&#xA;     * with other test values.&#xD;&#xA;     * @throws DaoException if an unexpected DAO exception occurs.&#xD;&#xA;     */&#xD;&#xA;    protected "/>
        <statements xsi:type="statements:Feature" begin="10450" end="10454">
          <expression xsi:type="expressions:CallSet" begin="10450" end="10454">
            <calls begin="10450" end="10454" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10456" end="10460" value=" get"/>
        <statements xsi:type="statements:Feature" begin="10462" end="10466">
          <expression xsi:type="expressions:CallSet" begin="10462" end="10466">
            <calls begin="10462" end="10466" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10468" end="10558" value="Example2() throws DaoException {&#xD;&#xA;        // fill attributes with example values&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="10560" end="10564">
          <expression xsi:type="expressions:CallSet" begin="10560" end="10564">
            <calls begin="10560" end="10564" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10566" end="10567" value=" "/>
        <statements xsi:type="statements:Feature" begin="10569" end="10584">
          <expression xsi:type="expressions:CallSet" begin="10569" end="10584">
            <calls begin="10569" end="10573" name="name" prefix=""/>
            <calls begin="10574" end="10584" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10586" end="10593" value=" = new "/>
        <statements xsi:type="statements:Feature" begin="10595" end="10599">
          <expression xsi:type="expressions:CallSet" begin="10595" end="10599">
            <calls begin="10595" end="10599" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10601" end="10606" value="();&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="10618" end="10637" value=" Member attributes "/>
        <statements xsi:type="statements:Text" begin="10643" end="10643" value=""/>
        <statements xsi:type="statements:For" begin="10657" end="11187">
          <iterator xsi:type="expressions:Parenthesis" begin="10657" end="10709">
            <expression xsi:type="expressions:CallSet" begin="10658" end="10708">
              <calls begin="10658" end="10667" name="attribute" prefix=""/>
              <calls begin="10668" end="10708" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="10688" end="10701" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="10702" end="10707"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="10714" end="10714" value=""/>
          <statements xsi:type="statements:If" begin="10731" end="11172">
            <condition xsi:type="expressions:Parenthesis" begin="10731" end="10758">
              <expression xsi:type="expressions:Operator" begin="10732" end="10757" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="10732" end="10742">
                  <expression xsi:type="expressions:CallSet" begin="10733" end="10742">
                    <calls begin="10733" end="10742" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="10746" end="10757">
                  <expression xsi:type="expressions:CallSet" begin="10747" end="10757">
                    <calls begin="10747" end="10757" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="10763" end="10763" value=""/>
            <thenStatements xsi:type="statements:If" begin="10784" end="11153">
              <condition xsi:type="expressions:Parenthesis" begin="10784" end="10796">
                <expression xsi:type="expressions:Operator" begin="10785" end="10795" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="10785" end="10790">
                    <calls begin="10785" end="10790" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="10794" end="10795" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="10801" end="10809" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="10811" end="10832">
                <expression xsi:type="expressions:CallSet" begin="10811" end="10832">
                  <calls begin="10811" end="10816" name="class" prefix=""/>
                  <calls begin="10817" end="10821" name="name" prefix=""/>
                  <calls begin="10822" end="10832" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10834" end="10838" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="10840" end="10855">
                <expression xsi:type="expressions:CallSet" begin="10840" end="10855">
                  <calls begin="10840" end="10844" name="name" prefix=""/>
                  <calls begin="10845" end="10855" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10857" end="10858" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="10860" end="10874">
                <expression xsi:type="expressions:CallSet" begin="10860" end="10874">
                  <calls begin="10860" end="10874" name="exampleValues2" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10876" end="10880" value=");&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="10908" end="10921" value="        List&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="10923" end="10932">
                <expression xsi:type="expressions:CallSet" begin="10923" end="10932">
                  <calls begin="10923" end="10927" name="type" prefix=""/>
                  <calls begin="10928" end="10932" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10934" end="10940" value="> list"/>
              <elseStatements xsi:type="statements:Feature" begin="10942" end="10957">
                <expression xsi:type="expressions:CallSet" begin="10942" end="10957">
                  <calls begin="10942" end="10946" name="name" prefix=""/>
                  <calls begin="10947" end="10957" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10959" end="10976" value=" = new ArrayList&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="10978" end="10987">
                <expression xsi:type="expressions:CallSet" begin="10978" end="10987">
                  <calls begin="10978" end="10982" name="type" prefix=""/>
                  <calls begin="10983" end="10987" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10989" end="11007" value=">();&#xD;&#xA;        list"/>
              <elseStatements xsi:type="statements:Feature" begin="11009" end="11024">
                <expression xsi:type="expressions:CallSet" begin="11009" end="11024">
                  <calls begin="11009" end="11013" name="name" prefix=""/>
                  <calls begin="11014" end="11024" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11026" end="11031" value=".add("/>
              <elseStatements xsi:type="statements:Feature" begin="11033" end="11047">
                <expression xsi:type="expressions:CallSet" begin="11033" end="11047">
                  <calls begin="11033" end="11047" name="exampleValues2" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11049" end="11061" value=");&#xD;&#xA;        "/>
              <elseStatements xsi:type="statements:Feature" begin="11063" end="11084">
                <expression xsi:type="expressions:CallSet" begin="11063" end="11084">
                  <calls begin="11063" end="11068" name="class" prefix=""/>
                  <calls begin="11069" end="11073" name="name" prefix=""/>
                  <calls begin="11074" end="11084" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11086" end="11090" value=".set"/>
              <elseStatements xsi:type="statements:Feature" begin="11092" end="11107">
                <expression xsi:type="expressions:CallSet" begin="11092" end="11107">
                  <calls begin="11092" end="11096" name="name" prefix=""/>
                  <calls begin="11097" end="11107" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11109" end="11114" value="(list"/>
              <elseStatements xsi:type="statements:Feature" begin="11116" end="11131">
                <expression xsi:type="expressions:CallSet" begin="11116" end="11131">
                  <calls begin="11116" end="11120" name="name" prefix=""/>
                  <calls begin="11121" end="11131" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11133" end="11137" value=");&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="11194" end="11194" value=""/>
        <statements xsi:type="statements:Comment" begin="11206" end="11235" value=" Composite relation required "/>
        <statements xsi:type="statements:Text" begin="11241" end="11241" value=""/>
        <statements xsi:type="statements:For" begin="11255" end="12587">
          <iterator xsi:type="expressions:Parenthesis" begin="11255" end="11320">
            <expression xsi:type="expressions:CallSet" begin="11256" end="11319">
              <calls begin="11256" end="11273" name="getAssociations" prefix=""/>
              <calls begin="11274" end="11304" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="11294" end="11303">
                  <calls begin="11294" end="11303" name="current" prefix=""/>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="11305" end="11318">
                  <calls begin="11305" end="11318" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="11325" end="11325" value=""/>
          <statements xsi:type="statements:If" begin="11342" end="12572">
            <condition xsi:type="expressions:Parenthesis" begin="11342" end="11354">
              <expression xsi:type="expressions:Operator" begin="11343" end="11353" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="11343" end="11348">
                  <calls begin="11343" end="11348" name="lower" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="11352" end="11353"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="11371" end="11396" value="            &#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="11398" end="11411">
              <expression xsi:type="expressions:CallSet" begin="11398" end="11411">
                <calls begin="11398" end="11411" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11413" end="11431" value=" for example 2 of "/>
            <thenStatements xsi:type="statements:Feature" begin="11433" end="11442">
              <expression xsi:type="expressions:CallSet" begin="11433" end="11442">
                <calls begin="11433" end="11437" name="type" prefix=""/>
                <calls begin="11438" end="11442" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11444" end="11445" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="11447" end="11451">
              <expression xsi:type="expressions:CallSet" begin="11447" end="11451">
                <calls begin="11447" end="11451" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11453" end="11470" value=" values&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="11472" end="11481">
              <expression xsi:type="expressions:CallSet" begin="11472" end="11481">
                <calls begin="11472" end="11476" name="type" prefix=""/>
                <calls begin="11477" end="11481" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11483" end="11484" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="11486" end="11501">
              <expression xsi:type="expressions:CallSet" begin="11486" end="11501">
                <calls begin="11486" end="11490" name="name" prefix=""/>
                <calls begin="11491" end="11501" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11503" end="11517" value="Example = new "/>
            <thenStatements xsi:type="statements:Feature" begin="11519" end="11528">
              <expression xsi:type="expressions:CallSet" begin="11519" end="11528">
                <calls begin="11519" end="11523" name="type" prefix=""/>
                <calls begin="11524" end="11528" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11530" end="11535" value="();&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="11556" end="11891">
              <condition xsi:type="expressions:Parenthesis" begin="11556" end="11568">
                <expression xsi:type="expressions:Operator" begin="11557" end="11567" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="11557" end="11562">
                    <calls begin="11557" end="11562" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="11566" end="11567" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="11573" end="11581" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="11583" end="11651">
                <expression xsi:type="expressions:CallSet" begin="11583" end="11651">
                  <calls begin="11583" end="11594" name="association" prefix=""/>
                  <calls begin="11595" end="11630" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="11615" end="11629">
                      <calls begin="11615" end="11624" name="current" prefix=""/>
                      <calls begin="11625" end="11629" name="type" prefix=""/>
                    </arguments>
                  </calls>
                  <calls begin="11631" end="11635" name="type" prefix=""/>
                  <calls begin="11636" end="11640" name="name" prefix=""/>
                  <calls begin="11641" end="11651" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="11653" end="11657" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="11659" end="11674">
                <expression xsi:type="expressions:CallSet" begin="11659" end="11674">
                  <calls begin="11659" end="11663" name="name" prefix=""/>
                  <calls begin="11664" end="11674" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="11676" end="11677" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="11679" end="11694">
                <expression xsi:type="expressions:CallSet" begin="11679" end="11694">
                  <calls begin="11679" end="11683" name="name" prefix=""/>
                  <calls begin="11684" end="11694" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="11696" end="11707" value="Example);&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="11735" end="11743" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="11745" end="11813">
                <expression xsi:type="expressions:CallSet" begin="11745" end="11813">
                  <calls begin="11745" end="11756" name="association" prefix=""/>
                  <calls begin="11757" end="11792" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="11777" end="11791">
                      <calls begin="11777" end="11786" name="current" prefix=""/>
                      <calls begin="11787" end="11791" name="type" prefix=""/>
                    </arguments>
                  </calls>
                  <calls begin="11793" end="11797" name="type" prefix=""/>
                  <calls begin="11798" end="11802" name="name" prefix=""/>
                  <calls begin="11803" end="11813" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11815" end="11819" value=".get"/>
              <elseStatements xsi:type="statements:Feature" begin="11821" end="11836">
                <expression xsi:type="expressions:CallSet" begin="11821" end="11836">
                  <calls begin="11821" end="11825" name="name" prefix=""/>
                  <calls begin="11826" end="11836" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11838" end="11845" value="().add("/>
              <elseStatements xsi:type="statements:Feature" begin="11847" end="11862">
                <expression xsi:type="expressions:CallSet" begin="11847" end="11862">
                  <calls begin="11847" end="11851" name="name" prefix=""/>
                  <calls begin="11852" end="11862" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11864" end="11875" value="Example);&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11898" end="11898" value=""/>
            <thenStatements xsi:type="statements:If" begin="11919" end="12361">
              <condition xsi:type="expressions:Parenthesis" begin="11919" end="11960">
                <expression xsi:type="expressions:Operator" begin="11920" end="11959" operator="&amp;&amp;">
                  <operands xsi:type="expressions:Operator" begin="11920" end="11936" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="11920" end="11928">
                      <calls begin="11920" end="11928" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="11932" end="11936"/>
                  </operands>
                  <operands xsi:type="expressions:Operator" begin="11940" end="11959" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="11940" end="11954">
                      <calls begin="11940" end="11948" name="opposite" prefix=""/>
                      <calls begin="11949" end="11954" name="lower" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="11958" end="11959"/>
                  </operands>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="11966" end="11966" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="11986" end="12015" value=" for bidirectionnal relation "/>
              <thenStatements xsi:type="statements:Text" begin="12021" end="12021" value=""/>
              <thenStatements xsi:type="statements:If" begin="12046" end="12338">
                <condition xsi:type="expressions:Parenthesis" begin="12046" end="12067">
                  <expression xsi:type="expressions:Operator" begin="12047" end="12066" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="12047" end="12061">
                      <calls begin="12047" end="12055" name="opposite" prefix=""/>
                      <calls begin="12056" end="12061" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="12065" end="12066" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="12072" end="12080" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="12082" end="12097">
                  <expression xsi:type="expressions:CallSet" begin="12082" end="12097">
                    <calls begin="12082" end="12086" name="name" prefix=""/>
                    <calls begin="12087" end="12097" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="12099" end="12110" value="Example.set"/>
                <thenStatements xsi:type="statements:Feature" begin="12112" end="12136">
                  <expression xsi:type="expressions:CallSet" begin="12112" end="12136">
                    <calls begin="12112" end="12120" name="opposite" prefix=""/>
                    <calls begin="12121" end="12125" name="name" prefix=""/>
                    <calls begin="12126" end="12136" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="12138" end="12139" value="("/>
                <thenStatements xsi:type="statements:Feature" begin="12141" end="12162">
                  <expression xsi:type="expressions:CallSet" begin="12141" end="12162">
                    <calls begin="12141" end="12146" name="class" prefix=""/>
                    <calls begin="12147" end="12151" name="name" prefix=""/>
                    <calls begin="12152" end="12162" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="12164" end="12176" value=");        &#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="12208" end="12216" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="12218" end="12233">
                  <expression xsi:type="expressions:CallSet" begin="12218" end="12233">
                    <calls begin="12218" end="12222" name="name" prefix=""/>
                    <calls begin="12223" end="12233" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="12235" end="12246" value="Example.get"/>
                <elseStatements xsi:type="statements:Feature" begin="12248" end="12272">
                  <expression xsi:type="expressions:CallSet" begin="12248" end="12272">
                    <calls begin="12248" end="12256" name="opposite" prefix=""/>
                    <calls begin="12257" end="12261" name="name" prefix=""/>
                    <calls begin="12262" end="12272" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="12274" end="12281" value="().add("/>
                <elseStatements xsi:type="statements:Feature" begin="12283" end="12304">
                  <expression xsi:type="expressions:CallSet" begin="12283" end="12304">
                    <calls begin="12283" end="12288" name="class" prefix=""/>
                    <calls begin="12289" end="12293" name="name" prefix=""/>
                    <calls begin="12294" end="12304" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="12306" end="12318" value=");        &#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12368" end="12376" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="12378" end="12400">
              <expression xsi:type="expressions:CallSet" begin="12378" end="12400">
                <calls begin="12378" end="12389" name="projectName" prefix=""/>
                <calls begin="12390" end="12400" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12402" end="12416" value="DaoFactory.get"/>
            <thenStatements xsi:type="statements:Feature" begin="12418" end="12427">
              <expression xsi:type="expressions:CallSet" begin="12418" end="12427">
                <calls begin="12418" end="12422" name="type" prefix=""/>
                <calls begin="12423" end="12427" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12429" end="12441" value="Dao().create"/>
            <thenStatements xsi:type="statements:Feature" begin="12443" end="12452">
              <expression xsi:type="expressions:CallSet" begin="12443" end="12452">
                <calls begin="12443" end="12447" name="type" prefix=""/>
                <calls begin="12448" end="12452" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12454" end="12455" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="12457" end="12472">
              <expression xsi:type="expressions:CallSet" begin="12457" end="12472">
                <calls begin="12457" end="12461" name="name" prefix=""/>
                <calls begin="12462" end="12472" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12474" end="12496" value="Example);&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="12498" end="12509">
              <expression xsi:type="expressions:CallSet" begin="12498" end="12509">
                <calls begin="12498" end="12509" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12511" end="12529" value=" for example 2 of "/>
            <thenStatements xsi:type="statements:Feature" begin="12531" end="12540">
              <expression xsi:type="expressions:CallSet" begin="12531" end="12540">
                <calls begin="12531" end="12535" name="type" prefix=""/>
                <calls begin="12536" end="12540" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12542" end="12543" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="12545" end="12549">
              <expression xsi:type="expressions:CallSet" begin="12545" end="12549">
                <calls begin="12545" end="12549" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12551" end="12560" value=" values&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="12594" end="12619" value="        &#xD;&#xA;        return "/>
        <statements xsi:type="statements:Feature" begin="12621" end="12636">
          <expression xsi:type="expressions:CallSet" begin="12621" end="12636">
            <calls begin="12621" end="12625" name="name" prefix=""/>
            <calls begin="12626" end="12636" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12638" end="12661" value=";&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // "/>
        <statements xsi:type="statements:Feature" begin="12663" end="12676">
          <expression xsi:type="expressions:CallSet" begin="12663" end="12676">
            <calls begin="12663" end="12676" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12678" end="12705" value=" of specific tests&#xD;&#xA;    // "/>
        <statements xsi:type="statements:Feature" begin="12707" end="12718">
          <expression xsi:type="expressions:CallSet" begin="12707" end="12718">
            <calls begin="12707" end="12718" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12720" end="12745" value=" of specific tests&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;"/>
      </scripts>
      <scripts begin="12798" end="12867">
        <descriptor begin="12758" end="12794" name="generateTest" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="12803" end="12862">
          <condition xsi:type="expressions:Parenthesis" begin="12803" end="12839">
            <expression xsi:type="expressions:CallSet" begin="12804" end="12838">
              <calls begin="12804" end="12838" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="12818" end="12837">
                  <calls begin="12818" end="12837" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="12830" end="12836" value="find"/>
                  </calls>
                </arguments>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="12844" end="12848" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="12850" end="12858">
            <expression xsi:type="expressions:CallSet" begin="12850" end="12858">
              <calls begin="12850" end="12858" name="findTest" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="12860" end="12862" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="12916" end="13553">
        <descriptor begin="12880" end="12912" name="findTest" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="12916" end="12951" value="    /**&#xD;&#xA;     * Test the operation "/>
        <statements xsi:type="statements:Feature" begin="12953" end="12957">
          <expression xsi:type="expressions:CallSet" begin="12953" end="12957">
            <calls begin="12953" end="12957" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12959" end="12979" value=".     &#xD;&#xA;     * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="12981" end="12994">
          <expression xsi:type="expressions:CallSet" begin="12981" end="12994">
            <calls begin="12981" end="12994" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12996" end="13032" value=" of test documentation&#xD;&#xA;     * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="13034" end="13045">
          <expression xsi:type="expressions:CallSet" begin="13034" end="13045">
            <calls begin="13034" end="13045" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13047" end="13100" value=" of test documentation&#xD;&#xA;     */&#xD;&#xA;    public void test"/>
        <statements xsi:type="statements:Feature" begin="13102" end="13117">
          <expression xsi:type="expressions:CallSet" begin="13102" end="13117">
            <calls begin="13102" end="13106" name="name" prefix=""/>
            <calls begin="13107" end="13117" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13119" end="13160" value="() throws DaoException {    &#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="13162" end="13175">
          <expression xsi:type="expressions:CallSet" begin="13162" end="13175">
            <calls begin="13162" end="13175" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13177" end="13185" value=" of test"/>
        <statements xsi:type="statements:Feature" begin="13187" end="13191">
          <expression xsi:type="expressions:CallSet" begin="13187" end="13191">
            <calls begin="13187" end="13191" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13193" end="13282" value="&#xD;&#xA;        // Initialized the test&#xD;&#xA;        &#xD;&#xA;        // Execute the tested code&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="13284" end="13293">
          <expression xsi:type="expressions:CallSet" begin="13284" end="13293">
            <calls begin="13284" end="13288" name="type" prefix=""/>
            <calls begin="13289" end="13293" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13295" end="13296" value=" "/>
        <statements xsi:type="statements:Feature" begin="13298" end="13318">
          <expression xsi:type="expressions:CallSet" begin="13298" end="13318">
            <calls begin="13298" end="13302" name="type" prefix=""/>
            <calls begin="13303" end="13307" name="name" prefix=""/>
            <calls begin="13308" end="13318" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13320" end="13327" value=" = dao."/>
        <statements xsi:type="statements:Feature" begin="13329" end="13333">
          <expression xsi:type="expressions:CallSet" begin="13329" end="13333">
            <calls begin="13329" end="13333" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13335" end="13336" value="("/>
        <statements xsi:type="statements:Feature" begin="13338" end="13360">
          <expression xsi:type="expressions:CallSet" begin="13338" end="13360">
            <calls begin="13338" end="13360" name="generateParameterNames" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13362" end="13466" value=")        &#xD;&#xA;        &#xD;&#xA;        // Verify result&#xD;&#xA;        Assert.assertNotNull(&quot;Result sould not be null&quot;, "/>
        <statements xsi:type="statements:Feature" begin="13468" end="13488">
          <expression xsi:type="expressions:CallSet" begin="13468" end="13488">
            <calls begin="13468" end="13472" name="type" prefix=""/>
            <calls begin="13473" end="13477" name="name" prefix=""/>
            <calls begin="13478" end="13488" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13490" end="13515" value=");&#xD;&#xA;        &#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="13517" end="13528">
          <expression xsi:type="expressions:CallSet" begin="13517" end="13528">
            <calls begin="13517" end="13528" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13530" end="13538" value=" of test"/>
        <statements xsi:type="statements:Feature" begin="13540" end="13544">
          <expression xsi:type="expressions:CallSet" begin="13540" end="13544">
            <calls begin="13540" end="13544" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13546" end="13553" value="&#xD;&#xA;    }"/>
      </scripts>
      <scripts begin="13618" end="14167">
        <descriptor begin="13566" end="13614" name="exampleValues" type="Property">
          <file/>
          <post xsi:type="expressions:CallSet" begin="13609" end="13613">
            <calls begin="13609" end="13613" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="13623" end="14162">
          <condition xsi:type="expressions:Parenthesis" begin="13623" end="13692">
            <expression xsi:type="expressions:Operator" begin="13624" end="13691" operator="||">
              <operands xsi:type="expressions:Operator" begin="13624" end="13655" operator="==">
                <operands xsi:type="expressions:CallSet" begin="13624" end="13646">
                  <calls begin="13624" end="13628" name="type" prefix=""/>
                  <calls begin="13629" end="13646" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="13650" end="13655" value="int"/>
              </operands>
              <operands xsi:type="expressions:Operator" begin="13659" end="13691" operator="==">
                <operands xsi:type="expressions:CallSet" begin="13659" end="13681">
                  <calls begin="13659" end="13663" name="type" prefix=""/>
                  <calls begin="13664" end="13681" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="13685" end="13691" value="long"/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="13697" end="13701" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="13703" end="13720">
            <expression xsi:type="expressions:CallSet" begin="13703" end="13720">
              <calls begin="13703" end="13707" name="name" prefix=""/>
              <calls begin="13708" end="13720" name="uniqueCode" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="13722" end="13724" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="14137" end="14145" value="    new "/>
          <elseStatements xsi:type="statements:Feature" begin="14147" end="14156">
            <expression xsi:type="expressions:CallSet" begin="14147" end="14156">
              <calls begin="14147" end="14151" name="type" prefix=""/>
              <calls begin="14152" end="14156" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="14158" end="14162" value="()&#xD;&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="13735" end="13771">
              <expression xsi:type="expressions:Operator" begin="13736" end="13770" operator="==">
                <operands xsi:type="expressions:CallSet" begin="13736" end="13758">
                  <calls begin="13736" end="13740" name="type" prefix=""/>
                  <calls begin="13741" end="13758" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="13762" end="13770" value="String"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="13776" end="13783" value="    &quot;my"/>
            <thenStatements xsi:type="statements:Feature" begin="13785" end="13800">
              <expression xsi:type="expressions:CallSet" begin="13785" end="13800">
                <calls begin="13785" end="13789" name="name" prefix=""/>
                <calls begin="13790" end="13800" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13802" end="13805" value="&quot;&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="13816" end="13853">
              <expression xsi:type="expressions:Operator" begin="13817" end="13852" operator="==">
                <operands xsi:type="expressions:CallSet" begin="13817" end="13839">
                  <calls begin="13817" end="13821" name="type" prefix=""/>
                  <calls begin="13822" end="13839" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="13843" end="13852" value="boolean"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="13858" end="13868" value="    true&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="13879" end="13913">
              <expression xsi:type="expressions:Operator" begin="13880" end="13912" operator="==">
                <operands xsi:type="expressions:CallSet" begin="13880" end="13902">
                  <calls begin="13880" end="13884" name="type" prefix=""/>
                  <calls begin="13885" end="13902" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="13906" end="13912" value="Date"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="13918" end="13935" value="    new Date(0)&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="13946" end="13982">
              <expression xsi:type="expressions:Operator" begin="13947" end="13981" operator="==">
                <operands xsi:type="expressions:CallSet" begin="13947" end="13969">
                  <calls begin="13947" end="13951" name="type" prefix=""/>
                  <calls begin="13952" end="13969" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="13973" end="13981" value="byte[]"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="13987" end="14007" value="    new byte[] {0}&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="14018" end="14091">
              <expression xsi:type="expressions:Operator" begin="14019" end="14090" operator="||">
                <operands xsi:type="expressions:Operator" begin="14019" end="14052" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="14019" end="14041">
                    <calls begin="14019" end="14023" name="type" prefix=""/>
                    <calls begin="14024" end="14041" name="convertToJavaType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="14045" end="14052" value="float"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="14056" end="14090" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="14056" end="14078">
                    <calls begin="14056" end="14060" name="type" prefix=""/>
                    <calls begin="14061" end="14078" name="convertToJavaType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="14082" end="14090" value="double"/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="14096" end="14100" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="14102" end="14119">
              <expression xsi:type="expressions:CallSet" begin="14102" end="14119">
                <calls begin="14102" end="14106" name="name" prefix=""/>
                <calls begin="14107" end="14119" name="uniqueCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="14121" end="14125" value=".0&#xD;&#xA;"/>
          </elseIf>
        </statements>
      </scripts>
      <scripts begin="14233" end="14787">
        <descriptor begin="14180" end="14229" name="exampleValues2" type="Property">
          <file/>
          <post xsi:type="expressions:CallSet" begin="14224" end="14228">
            <calls begin="14224" end="14228" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="14238" end="14782">
          <condition xsi:type="expressions:Parenthesis" begin="14238" end="14307">
            <expression xsi:type="expressions:Operator" begin="14239" end="14306" operator="||">
              <operands xsi:type="expressions:Operator" begin="14239" end="14270" operator="==">
                <operands xsi:type="expressions:CallSet" begin="14239" end="14261">
                  <calls begin="14239" end="14243" name="type" prefix=""/>
                  <calls begin="14244" end="14261" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="14265" end="14270" value="int"/>
              </operands>
              <operands xsi:type="expressions:Operator" begin="14274" end="14306" operator="==">
                <operands xsi:type="expressions:CallSet" begin="14274" end="14296">
                  <calls begin="14274" end="14278" name="type" prefix=""/>
                  <calls begin="14279" end="14296" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="14300" end="14306" value="long"/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="14312" end="14316" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="14318" end="14335">
            <expression xsi:type="expressions:CallSet" begin="14318" end="14335">
              <calls begin="14318" end="14322" name="name" prefix=""/>
              <calls begin="14323" end="14335" name="uniqueCode" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="14337" end="14339" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="14757" end="14765" value="    new "/>
          <elseStatements xsi:type="statements:Feature" begin="14767" end="14776">
            <expression xsi:type="expressions:CallSet" begin="14767" end="14776">
              <calls begin="14767" end="14771" name="type" prefix=""/>
              <calls begin="14772" end="14776" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="14778" end="14782" value="()&#xD;&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="14350" end="14386">
              <expression xsi:type="expressions:Operator" begin="14351" end="14385" operator="==">
                <operands xsi:type="expressions:CallSet" begin="14351" end="14373">
                  <calls begin="14351" end="14355" name="type" prefix=""/>
                  <calls begin="14356" end="14373" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="14377" end="14385" value="String"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="14391" end="14402" value="    &quot;second"/>
            <thenStatements xsi:type="statements:Feature" begin="14404" end="14419">
              <expression xsi:type="expressions:CallSet" begin="14404" end="14419">
                <calls begin="14404" end="14408" name="name" prefix=""/>
                <calls begin="14409" end="14419" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="14421" end="14424" value="&quot;&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="14435" end="14472">
              <expression xsi:type="expressions:Operator" begin="14436" end="14471" operator="==">
                <operands xsi:type="expressions:CallSet" begin="14436" end="14458">
                  <calls begin="14436" end="14440" name="type" prefix=""/>
                  <calls begin="14441" end="14458" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="14462" end="14471" value="boolean"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="14477" end="14488" value="    false&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="14499" end="14533">
              <expression xsi:type="expressions:Operator" begin="14500" end="14532" operator="==">
                <operands xsi:type="expressions:CallSet" begin="14500" end="14522">
                  <calls begin="14500" end="14504" name="type" prefix=""/>
                  <calls begin="14505" end="14522" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="14526" end="14532" value="Date"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="14538" end="14555" value="    new Date(1)&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="14566" end="14602">
              <expression xsi:type="expressions:Operator" begin="14567" end="14601" operator="==">
                <operands xsi:type="expressions:CallSet" begin="14567" end="14589">
                  <calls begin="14567" end="14571" name="type" prefix=""/>
                  <calls begin="14572" end="14589" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="14593" end="14601" value="byte[]"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="14607" end="14627" value="    new byte[] {1}&#xD;&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="14638" end="14711">
              <expression xsi:type="expressions:Operator" begin="14639" end="14710" operator="||">
                <operands xsi:type="expressions:Operator" begin="14639" end="14672" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="14639" end="14661">
                    <calls begin="14639" end="14643" name="type" prefix=""/>
                    <calls begin="14644" end="14661" name="convertToJavaType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="14665" end="14672" value="float"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="14676" end="14710" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="14676" end="14698">
                    <calls begin="14676" end="14680" name="type" prefix=""/>
                    <calls begin="14681" end="14698" name="convertToJavaType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="14702" end="14710" value="double"/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="14716" end="14720" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="14722" end="14739">
              <expression xsi:type="expressions:CallSet" begin="14722" end="14739">
                <calls begin="14722" end="14726" name="name" prefix=""/>
                <calls begin="14727" end="14739" name="uniqueCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="14741" end="14745" value=".0&#xD;&#xA;"/>
          </elseIf>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.hibernate.dao-hibernate-direct" imports="/0/@resources.6 /0/@resources.1 /0/@resources.7 /0/@resources.8 /0/@resources.9" beginTag="&lt;%" endTag="%>">
      <scripts begin="1058" end="1160">
        <descriptor begin="1022" end="1054" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1063" end="1155">
          <condition xsi:type="expressions:Parenthesis" begin="1063" end="1073">
            <expression xsi:type="expressions:CallSet" begin="1064" end="1072">
              <calls begin="1064" end="1072" name="isEntity" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1081" end="1095">
            <expression xsi:type="expressions:CallSet" begin="1081" end="1095">
              <calls begin="1081" end="1095" name="pathToMainJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1097" end="1098" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1100" end="1125">
            <expression xsi:type="expressions:CallSet" begin="1100" end="1125">
              <calls begin="1100" end="1116" name="hibernatePackage" prefix=""/>
              <calls begin="1117" end="1125" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1127" end="1137" value="/Hibernate"/>
          <thenStatements xsi:type="statements:Feature" begin="1139" end="1143">
            <expression xsi:type="expressions:CallSet" begin="1139" end="1143">
              <calls begin="1139" end="1143" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1145" end="1155" value="Dao.java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1232" end="6768">
        <descriptor begin="1173" end="1228" name="generateDao" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1213" end="1225">
              <expression xsi:type="expressions:CallSet" begin="1213" end="1225">
                <calls begin="1213" end="1225" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1232" end="1240" value="package "/>
        <statements xsi:type="statements:Feature" begin="1242" end="1258">
          <expression xsi:type="expressions:CallSet" begin="1242" end="1258">
            <calls begin="1242" end="1258" name="hibernatePackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1260" end="1268" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1270" end="1283">
          <expression xsi:type="expressions:CallSet" begin="1270" end="1283">
            <calls begin="1270" end="1283" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1285" end="1570" value=" for import&#xD;&#xA;import java.util.Collection;&#xD;&#xA;&#xD;&#xA;import org.apache.commons.logging.Log;&#xD;&#xA;import org.apache.commons.logging.LogFactory;&#xD;&#xA;import org.hibernate.Criteria;&#xD;&#xA;import org.hibernate.HibernateException;&#xD;&#xA;import org.hibernate.Session;&#xD;&#xA;import org.hibernate.criterion.Restrictions;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1572" end="1590">
          <expression xsi:type="expressions:CallSet" begin="1572" end="1590">
            <calls begin="1572" end="1590" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1592" end="1594" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1596" end="1615">
          <expression xsi:type="expressions:CallSet" begin="1596" end="1615">
            <calls begin="1596" end="1615" name="importHibernateUtil" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1617" end="1626" value="&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1628" end="1647">
          <expression xsi:type="expressions:CallSet" begin="1628" end="1647">
            <calls begin="1628" end="1647" name="entityQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1649" end="1659" value=";&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1661" end="1686">
          <expression xsi:type="expressions:CallSet" begin="1661" end="1686">
            <calls begin="1661" end="1686" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1688" end="1696" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1698" end="1709">
          <expression xsi:type="expressions:CallSet" begin="1698" end="1709">
            <calls begin="1698" end="1709" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1711" end="1766" value=" for import&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA; * Implementation of DAO interface "/>
        <statements xsi:type="statements:Feature" begin="1768" end="1784">
          <expression xsi:type="expressions:CallSet" begin="1768" end="1784">
            <calls begin="1768" end="1784" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1786" end="1846" value=" based on the hibernate&#xD;&#xA; * persistence framework.&#xD;&#xA; * @see "/>
        <statements xsi:type="statements:Feature" begin="1848" end="1873">
          <expression xsi:type="expressions:CallSet" begin="1848" end="1873">
            <calls begin="1848" end="1873" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1875" end="1904" value="&#xD;&#xA; */&#xD;&#xA;public class Hibernate"/>
        <statements xsi:type="statements:Feature" begin="1906" end="1910">
          <expression xsi:type="expressions:CallSet" begin="1906" end="1910">
            <calls begin="1906" end="1910" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1912" end="1927" value="Dao implements "/>
        <statements xsi:type="statements:Feature" begin="1929" end="1945">
          <expression xsi:type="expressions:CallSet" begin="1929" end="1945">
            <calls begin="1929" end="1945" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1947" end="2076" value=" {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * The logger of this class.&#xD;&#xA;     */&#xD;&#xA;    private static final Log LOG =&#xD;&#xA;        LogFactory.getLog(Hibernate"/>
        <statements xsi:type="statements:Feature" begin="2078" end="2082">
          <expression xsi:type="expressions:CallSet" begin="2078" end="2082">
            <calls begin="2078" end="2082" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2084" end="2153" value="Dao.class);&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Creates a new element.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="2155" end="2170">
          <expression xsi:type="expressions:CallSet" begin="2155" end="2170">
            <calls begin="2155" end="2159" name="name" prefix=""/>
            <calls begin="2160" end="2170" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2172" end="2267" value=" Element to create.&#xD;&#xA;     * @throws DaoException If an HibernateException occurs.&#xD;&#xA;     * @see "/>
        <statements xsi:type="statements:Feature" begin="2269" end="2294">
          <expression xsi:type="expressions:CallSet" begin="2269" end="2294">
            <calls begin="2269" end="2294" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2296" end="2303" value=".create"/>
        <statements xsi:type="statements:Feature" begin="2305" end="2309">
          <expression xsi:type="expressions:CallSet" begin="2305" end="2309">
            <calls begin="2305" end="2309" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2311" end="2344" value="&#xD;&#xA;     */&#xD;&#xA;    public void create"/>
        <statements xsi:type="statements:Feature" begin="2346" end="2350">
          <expression xsi:type="expressions:CallSet" begin="2346" end="2350">
            <calls begin="2346" end="2350" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2352" end="2359" value="(final "/>
        <statements xsi:type="statements:Feature" begin="2361" end="2365">
          <expression xsi:type="expressions:CallSet" begin="2361" end="2365">
            <calls begin="2361" end="2365" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2367" end="2368" value=" "/>
        <statements xsi:type="statements:Feature" begin="2370" end="2385">
          <expression xsi:type="expressions:CallSet" begin="2370" end="2385">
            <calls begin="2370" end="2374" name="name" prefix=""/>
            <calls begin="2375" end="2385" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2387" end="2444" value=") throws DaoException {&#xD;&#xA;        LOG.debug(&quot;Create a new "/>
        <statements xsi:type="statements:Feature" begin="2446" end="2450">
          <expression xsi:type="expressions:CallSet" begin="2446" end="2450">
            <calls begin="2446" end="2450" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2452" end="2573" value=" entity&quot;);&#xD;&#xA;    &#xD;&#xA;        try {&#xD;&#xA;            Session session = HibernateUtil.currentSession();&#xD;&#xA;            session.save("/>
        <statements xsi:type="statements:Feature" begin="2575" end="2590">
          <expression xsi:type="expressions:CallSet" begin="2575" end="2590">
            <calls begin="2575" end="2579" name="name" prefix=""/>
            <calls begin="2580" end="2590" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2592" end="2758" value=");&#xD;&#xA;        } catch (HibernateException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Updates an existing element.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="2760" end="2775">
          <expression xsi:type="expressions:CallSet" begin="2760" end="2775">
            <calls begin="2760" end="2764" name="name" prefix=""/>
            <calls begin="2765" end="2775" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2777" end="2931" value="&#xD;&#xA;     *            Element to update. If the element has an id,it may use it.&#xD;&#xA;     * @throws DaoException If an HibernateException occurs.&#xD;&#xA;     * @see "/>
        <statements xsi:type="statements:Feature" begin="2933" end="2958">
          <expression xsi:type="expressions:CallSet" begin="2933" end="2958">
            <calls begin="2933" end="2958" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2960" end="2967" value=".update"/>
        <statements xsi:type="statements:Feature" begin="2969" end="2973">
          <expression xsi:type="expressions:CallSet" begin="2969" end="2973">
            <calls begin="2969" end="2973" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2975" end="3008" value="&#xD;&#xA;     */&#xD;&#xA;    public void update"/>
        <statements xsi:type="statements:Feature" begin="3010" end="3014">
          <expression xsi:type="expressions:CallSet" begin="3010" end="3014">
            <calls begin="3010" end="3014" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3016" end="3023" value="(final "/>
        <statements xsi:type="statements:Feature" begin="3025" end="3029">
          <expression xsi:type="expressions:CallSet" begin="3025" end="3029">
            <calls begin="3025" end="3029" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3031" end="3032" value=" "/>
        <statements xsi:type="statements:Feature" begin="3034" end="3049">
          <expression xsi:type="expressions:CallSet" begin="3034" end="3049">
            <calls begin="3034" end="3038" name="name" prefix=""/>
            <calls begin="3039" end="3049" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3051" end="3113" value=") throws DaoException {&#xD;&#xA;        LOG.debug(&quot;Update the entity "/>
        <statements xsi:type="statements:Feature" begin="3115" end="3119">
          <expression xsi:type="expressions:CallSet" begin="3115" end="3119">
            <calls begin="3115" end="3119" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3121" end="3127" value=" with "/>
        <statements xsi:type="statements:Feature" begin="3129" end="3138">
          <expression xsi:type="expressions:CallSet" begin="3129" end="3138">
            <calls begin="3129" end="3138" name="getPKName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3140" end="3147" value=" = &quot; + "/>
        <statements xsi:type="statements:Feature" begin="3149" end="3164">
          <expression xsi:type="expressions:CallSet" begin="3149" end="3164">
            <calls begin="3149" end="3153" name="name" prefix=""/>
            <calls begin="3154" end="3164" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3166" end="3170" value=".get"/>
        <statements xsi:type="statements:Feature" begin="3172" end="3192">
          <expression xsi:type="expressions:CallSet" begin="3172" end="3192">
            <calls begin="3172" end="3181" name="getPKName" prefix=""/>
            <calls begin="3182" end="3192" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3194" end="3315" value="());&#xD;&#xA;        &#xD;&#xA;        try {&#xD;&#xA;            Session session = HibernateUtil.currentSession();&#xD;&#xA;            session.update("/>
        <statements xsi:type="statements:Feature" begin="3317" end="3332">
          <expression xsi:type="expressions:CallSet" begin="3317" end="3332">
            <calls begin="3317" end="3321" name="name" prefix=""/>
            <calls begin="3322" end="3332" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3334" end="3489" value=");&#xD;&#xA;        } catch (HibernateException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Deletes an element.&#xD;&#xA;     * Only "/>
        <statements xsi:type="statements:Feature" begin="3491" end="3500">
          <expression xsi:type="expressions:CallSet" begin="3491" end="3500">
            <calls begin="3491" end="3500" name="getPKName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3502" end="3569" value=" can be used to find which element must be deleted.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="3571" end="3586">
          <expression xsi:type="expressions:CallSet" begin="3571" end="3586">
            <calls begin="3571" end="3575" name="name" prefix=""/>
            <calls begin="3576" end="3586" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3588" end="3694" value=" Element which will be delete.&#xD;&#xA;     * @throws DaoException If an HibernateException occurs.&#xD;&#xA;     * @see "/>
        <statements xsi:type="statements:Feature" begin="3696" end="3721">
          <expression xsi:type="expressions:CallSet" begin="3696" end="3721">
            <calls begin="3696" end="3721" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3723" end="3730" value=".delete"/>
        <statements xsi:type="statements:Feature" begin="3732" end="3736">
          <expression xsi:type="expressions:CallSet" begin="3732" end="3736">
            <calls begin="3732" end="3736" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3738" end="3771" value="&#xD;&#xA;     */&#xD;&#xA;    public void delete"/>
        <statements xsi:type="statements:Feature" begin="3773" end="3777">
          <expression xsi:type="expressions:CallSet" begin="3773" end="3777">
            <calls begin="3773" end="3777" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3779" end="3786" value="(final "/>
        <statements xsi:type="statements:Feature" begin="3788" end="3792">
          <expression xsi:type="expressions:CallSet" begin="3788" end="3792">
            <calls begin="3788" end="3792" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3794" end="3795" value=" "/>
        <statements xsi:type="statements:Feature" begin="3797" end="3812">
          <expression xsi:type="expressions:CallSet" begin="3797" end="3812">
            <calls begin="3797" end="3801" name="name" prefix=""/>
            <calls begin="3802" end="3812" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3814" end="3876" value=") throws DaoException {&#xD;&#xA;        LOG.debug(&quot;Delete the entity "/>
        <statements xsi:type="statements:Feature" begin="3878" end="3882">
          <expression xsi:type="expressions:CallSet" begin="3878" end="3882">
            <calls begin="3878" end="3882" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3884" end="3890" value=" with "/>
        <statements xsi:type="statements:Feature" begin="3892" end="3901">
          <expression xsi:type="expressions:CallSet" begin="3892" end="3901">
            <calls begin="3892" end="3901" name="getPKName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3903" end="3909" value=" =&quot; + "/>
        <statements xsi:type="statements:Feature" begin="3911" end="3926">
          <expression xsi:type="expressions:CallSet" begin="3911" end="3926">
            <calls begin="3911" end="3915" name="name" prefix=""/>
            <calls begin="3916" end="3926" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3928" end="3932" value=".get"/>
        <statements xsi:type="statements:Feature" begin="3934" end="3954">
          <expression xsi:type="expressions:CallSet" begin="3934" end="3954">
            <calls begin="3934" end="3943" name="getPKName" prefix=""/>
            <calls begin="3944" end="3954" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3956" end="4069" value="());&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            Session session = HibernateUtil.currentSession();&#xD;&#xA;            session.delete("/>
        <statements xsi:type="statements:Feature" begin="4071" end="4086">
          <expression xsi:type="expressions:CallSet" begin="4071" end="4086">
            <calls begin="4071" end="4075" name="name" prefix=""/>
            <calls begin="4076" end="4086" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4088" end="4367" value=");&#xD;&#xA;        } catch (HibernateException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Finds all elements.&#xD;&#xA;     * @return A list with all elements, without any filter.&#xD;&#xA;     * @throws DaoException If an HibernateException occurs.&#xD;&#xA;     * @see "/>
        <statements xsi:type="statements:Feature" begin="4369" end="4394">
          <expression xsi:type="expressions:CallSet" begin="4369" end="4394">
            <calls begin="4369" end="4394" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4396" end="4404" value=".findAll"/>
        <statements xsi:type="statements:Feature" begin="4406" end="4410">
          <expression xsi:type="expressions:CallSet" begin="4406" end="4410">
            <calls begin="4406" end="4410" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4412" end="4446" value="s&#xD;&#xA;     */&#xD;&#xA;    public Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="4448" end="4452">
          <expression xsi:type="expressions:CallSet" begin="4448" end="4452">
            <calls begin="4448" end="4452" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4454" end="4463" value="> findAll"/>
        <statements xsi:type="statements:Feature" begin="4465" end="4469">
          <expression xsi:type="expressions:CallSet" begin="4465" end="4469">
            <calls begin="4465" end="4469" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4471" end="4538" value="s() throws DaoException {&#xD;&#xA;        LOG.debug(&quot;Find all instance of "/>
        <statements xsi:type="statements:Feature" begin="4540" end="4544">
          <expression xsi:type="expressions:CallSet" begin="4540" end="4544">
            <calls begin="4540" end="4544" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4546" end="4701" value=" entity&quot;);&#xD;&#xA;        &#xD;&#xA;        try {&#xD;&#xA;            Session session = HibernateUtil.currentSession();&#xD;&#xA;            Criteria criteria = session.createCriteria("/>
        <statements xsi:type="statements:Feature" begin="4703" end="4707">
          <expression xsi:type="expressions:CallSet" begin="4703" end="4707">
            <calls begin="4703" end="4707" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4709" end="4742" value=".class);&#xD;&#xA;            Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="4744" end="4748">
          <expression xsi:type="expressions:CallSet" begin="4744" end="4748">
            <calls begin="4744" end="4748" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4750" end="4874" value="> resultList = criteria.list();&#xD;&#xA;&#xD;&#xA;            LOG.debug(&quot;Found &quot; + resultList.size()&#xD;&#xA;                    + &quot; instances of "/>
        <statements xsi:type="statements:Feature" begin="4876" end="4880">
          <expression xsi:type="expressions:CallSet" begin="4876" end="4880">
            <calls begin="4876" end="4880" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4882" end="5100" value=" entity&quot;);&#xD;&#xA;            return resultList;&#xD;&#xA;        } catch (HibernateException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Finds one entity by its primary key.&#xD;&#xA;     * @param some"/>
        <statements xsi:type="statements:Feature" begin="5102" end="5122">
          <expression xsi:type="expressions:CallSet" begin="5102" end="5122">
            <calls begin="5102" end="5111" name="getPKName" prefix=""/>
            <calls begin="5112" end="5122" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5124" end="5262" value=" The PK of the entity&#xD;&#xA;     * @return Return the entity found.&#xD;&#xA;     * @throws DaoException If an HibernateException occurs.&#xD;&#xA;     * @see "/>
        <statements xsi:type="statements:Feature" begin="5264" end="5289">
          <expression xsi:type="expressions:CallSet" begin="5264" end="5289">
            <calls begin="5264" end="5289" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5291" end="5292" value="."/>
        <statements xsi:type="statements:Feature" begin="5294" end="5312">
          <expression xsi:type="expressions:CallSet" begin="5294" end="5312">
            <calls begin="5294" end="5312" name="findByPKMethodName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5314" end="5336" value="&#xD;&#xA;     */&#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="5338" end="5355">
          <expression xsi:type="expressions:CallSet" begin="5338" end="5355">
            <calls begin="5338" end="5355" name="findByPKSignature" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5357" end="5404" value=" {&#xD;&#xA;        LOG.debug(&quot;Looking for instance of "/>
        <statements xsi:type="statements:Feature" begin="5406" end="5410">
          <expression xsi:type="expressions:CallSet" begin="5406" end="5410">
            <calls begin="5406" end="5410" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5412" end="5423" value=" entity by "/>
        <statements xsi:type="statements:Feature" begin="5425" end="5434">
          <expression xsi:type="expressions:CallSet" begin="5425" end="5434">
            <calls begin="5425" end="5434" name="getPKName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5436" end="5464" value=" : &quot;&#xD;&#xA;                + some"/>
        <statements xsi:type="statements:Feature" begin="5466" end="5486">
          <expression xsi:type="expressions:CallSet" begin="5466" end="5486">
            <calls begin="5466" end="5475" name="getPKName" prefix=""/>
            <calls begin="5476" end="5486" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5488" end="5635" value=");&#xD;&#xA;        &#xD;&#xA;        try {&#xD;&#xA;            Session session = HibernateUtil.currentSession();&#xD;&#xA;            Criteria criteria = session.createCriteria("/>
        <statements xsi:type="statements:Feature" begin="5637" end="5641">
          <expression xsi:type="expressions:CallSet" begin="5637" end="5641">
            <calls begin="5637" end="5641" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5643" end="5690" value=".class)&#xD;&#xA;                .add(Restrictions.eq(&quot;"/>
        <statements xsi:type="statements:Feature" begin="5692" end="5701">
          <expression xsi:type="expressions:CallSet" begin="5692" end="5701">
            <calls begin="5692" end="5701" name="getPKName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5703" end="5710" value="&quot;, some"/>
        <statements xsi:type="statements:Feature" begin="5712" end="5732">
          <expression xsi:type="expressions:CallSet" begin="5712" end="5732">
            <calls begin="5712" end="5721" name="getPKName" prefix=""/>
            <calls begin="5722" end="5732" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5734" end="5751" value="));&#xD;&#xA;            "/>
        <statements xsi:type="statements:Feature" begin="5753" end="5757">
          <expression xsi:type="expressions:CallSet" begin="5753" end="5757">
            <calls begin="5753" end="5757" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5759" end="5770" value=" result = ("/>
        <statements xsi:type="statements:Feature" begin="5772" end="5776">
          <expression xsi:type="expressions:CallSet" begin="5772" end="5776">
            <calls begin="5772" end="5776" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5778" end="5945" value=") criteria.uniqueResult();&#xD;&#xA;&#xD;&#xA;            return result; &#xD;&#xA;        } catch (HibernateException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="5949" end="5991" value=" Generate additional methods declarations "/>
        <statements xsi:type="statements:For" begin="6003" end="6702">
          <iterator xsi:type="expressions:Parenthesis" begin="6003" end="6019">
            <expression xsi:type="expressions:CallSet" begin="6004" end="6018">
              <calls begin="6004" end="6018" name="ownedOperation" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="6024" end="6024" value=""/>
          <statements xsi:type="statements:Comment" begin="6032" end="6072" value=" Generate methods with find stereotypes "/>
          <statements xsi:type="statements:Text" begin="6078" end="6078" value=""/>
          <statements xsi:type="statements:If" begin="6087" end="6695">
            <condition xsi:type="expressions:Parenthesis" begin="6087" end="6123">
              <expression xsi:type="expressions:CallSet" begin="6088" end="6122">
                <calls begin="6088" end="6122" name="hasStereotype" prefix="">
                  <arguments xsi:type="expressions:CallSet" begin="6102" end="6121">
                    <calls begin="6102" end="6121" name="getProperty" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="6114" end="6120" value="find"/>
                    </calls>
                  </arguments>
                </calls>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="6128" end="6132" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="6134" end="6149">
              <expression xsi:type="expressions:CallSet" begin="6134" end="6149">
                <calls begin="6134" end="6149" name="generateJavadoc" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6151" end="6164" value="&#xD;&#xA;    public "/>
            <thenStatements xsi:type="statements:Feature" begin="6166" end="6196">
              <expression xsi:type="expressions:CallSet" begin="6166" end="6196">
                <calls begin="6166" end="6178" name="returnResult" prefix=""/>
                <calls begin="6179" end="6196" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6198" end="6199" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="6201" end="6205">
              <expression xsi:type="expressions:CallSet" begin="6201" end="6205">
                <calls begin="6201" end="6205" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6207" end="6208" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="6210" end="6228">
              <expression xsi:type="expressions:CallSet" begin="6210" end="6228">
                <calls begin="6210" end="6228" name="generateParameters" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6230" end="6274" value=") throws DaoException {        &#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="6276" end="6289">
              <expression xsi:type="expressions:CallSet" begin="6276" end="6289">
                <calls begin="6276" end="6289" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6291" end="6296" value=" for "/>
            <thenStatements xsi:type="statements:Feature" begin="6298" end="6302">
              <expression xsi:type="expressions:CallSet" begin="6298" end="6302">
                <calls begin="6298" end="6302" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6304" end="6330" value="&#xD;&#xA;        LOG.debug(&quot;Call "/>
            <thenStatements xsi:type="statements:Feature" begin="6332" end="6336">
              <expression xsi:type="expressions:CallSet" begin="6332" end="6336">
                <calls begin="6332" end="6336" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6338" end="6342" value=" on "/>
            <thenStatements xsi:type="statements:Feature" begin="6344" end="6354">
              <expression xsi:type="expressions:CallSet" begin="6344" end="6354">
                <calls begin="6344" end="6349" name="class" prefix=""/>
                <calls begin="6350" end="6354" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6356" end="6654" value=" entity&quot;);        &#xD;&#xA;        try {&#xD;&#xA;            Session session = HibernateUtil.currentSession();&#xD;&#xA;            // TODO implementation with Hibernate of criteria search&#xD;&#xA;            return null;&#xD;&#xA;        } catch (HibernateException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        }&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="6656" end="6667">
              <expression xsi:type="expressions:CallSet" begin="6656" end="6667">
                <calls begin="6656" end="6667" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6669" end="6674" value=" for "/>
            <thenStatements xsi:type="statements:Feature" begin="6676" end="6680">
              <expression xsi:type="expressions:CallSet" begin="6676" end="6680">
                <calls begin="6676" end="6680" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6682" end="6691" value="&#xD;&#xA;    }&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="6709" end="6717" value="&#xD;&#xA;    //"/>
        <statements xsi:type="statements:Feature" begin="6719" end="6732">
          <expression xsi:type="expressions:CallSet" begin="6719" end="6732">
            <calls begin="6719" end="6732" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6734" end="6742" value="&#xD;&#xA;    //"/>
        <statements xsi:type="statements:Feature" begin="6744" end="6755">
          <expression xsi:type="expressions:CallSet" begin="6744" end="6755">
            <calls begin="6744" end="6755" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6757" end="6760" value="&#xD;&#xA;}"/>
        <statements xsi:type="statements:Feature" begin="6762" end="6766">
          <expression xsi:type="expressions:StringLiteral" begin="6762" end="6766" value="&#xA;"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.hibernate.dao-hibernate-hbm" imports="/0/@resources.6 /0/@resources.1 /0/@resources.7 /0/@resources.8 /0/@resources.9 /0/@resources.10" beginTag="&lt;%" endTag="%>">
      <scripts begin="1065" end="1187">
        <descriptor begin="1029" end="1061" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1070" end="1182">
          <condition xsi:type="expressions:Parenthesis" begin="1070" end="1104">
            <expression xsi:type="expressions:Operator" begin="1071" end="1103" operator="&amp;&amp;">
              <operands xsi:type="expressions:CallSet" begin="1071" end="1079">
                <calls begin="1071" end="1079" name="isEntity" prefix=""/>
              </operands>
              <operands xsi:type="expressions:CallSet" begin="1083" end="1103">
                <calls begin="1083" end="1093" name="superClass" prefix=""/>
                <calls begin="1094" end="1103" name="isEmpty" prefix=""/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1112" end="1131">
            <expression xsi:type="expressions:CallSet" begin="1112" end="1131">
              <calls begin="1112" end="1131" name="pathToMainResources" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1133" end="1134" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1136" end="1161">
            <expression xsi:type="expressions:CallSet" begin="1136" end="1161">
              <calls begin="1136" end="1152" name="hibernatePackage" prefix=""/>
              <calls begin="1153" end="1161" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1163" end="1164" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1166" end="1170">
            <expression xsi:type="expressions:CallSet" begin="1166" end="1170">
              <calls begin="1166" end="1170" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1172" end="1182" value=".hbm.xml&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1256" end="2564">
        <descriptor begin="1200" end="1252" name="generate" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1237" end="1249">
              <expression xsi:type="expressions:CallSet" begin="1237" end="1249">
                <calls begin="1237" end="1249" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1256" end="1480" value="&lt;?xml version=&quot;1.0&quot;?>&#xD;&#xA;&lt;!DOCTYPE hibernate-mapping&#xD;&#xA;    PUBLIC &quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;&#xD;&#xA;    &quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;>&#xD;&#xA;&#xD;&#xA;&lt;hibernate-mapping>&#xD;&#xA;&#xD;&#xA;    &lt;class &#xD;&#xA;        name=&quot;"/>
        <statements xsi:type="statements:Feature" begin="1482" end="1495">
          <expression xsi:type="expressions:CallSet" begin="1482" end="1495">
            <calls begin="1482" end="1495" name="entityPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1497" end="1498" value="."/>
        <statements xsi:type="statements:Feature" begin="1500" end="1504">
          <expression xsi:type="expressions:CallSet" begin="1500" end="1504">
            <calls begin="1500" end="1504" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1506" end="1525" value="&quot; &#xD;&#xA;        table=&quot;"/>
        <statements xsi:type="statements:Feature" begin="1527" end="1547">
          <expression xsi:type="expressions:CallSet" begin="1527" end="1547">
            <calls begin="1527" end="1531" name="name" prefix=""/>
            <calls begin="1532" end="1547" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1549" end="1588" value="&quot;  &#xD;&#xA;        dynamic-update=&quot;true&quot;>&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="1593" end="2134">
          <condition xsi:type="expressions:Parenthesis" begin="1593" end="1608">
            <expression xsi:type="expressions:CallSet" begin="1594" end="1607">
              <calls begin="1594" end="1607" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1613" end="1613" value=""/>
          <thenStatements xsi:type="statements:For" begin="1623" end="1959">
            <iterator xsi:type="expressions:Parenthesis" begin="1623" end="1658">
              <expression xsi:type="expressions:CallSet" begin="1624" end="1657">
                <calls begin="1624" end="1638" name="getPKAttribute" prefix=""/>
                <calls begin="1639" end="1657" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1646" end="1656" value="Property"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="1663" end="1717" value="        &lt;!-- ID from the model -->&#xD;&#xA;        &lt;id name=&quot;"/>
            <statements xsi:type="statements:Feature" begin="1719" end="1723">
              <expression xsi:type="expressions:CallSet" begin="1719" end="1723">
                <calls begin="1719" end="1723" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1725" end="1747" value="&quot; type=&quot;long&quot; column=&quot;"/>
            <statements xsi:type="statements:Feature" begin="1749" end="1769">
              <expression xsi:type="expressions:CallSet" begin="1749" end="1769">
                <calls begin="1749" end="1753" name="name" prefix=""/>
                <calls begin="1754" end="1769" name="toSqlNotation" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1771" end="1860" value="&quot;>&#xD;&#xA;            &lt;generator class=&quot;sequence&quot;>&#xD;&#xA;                &lt;param name=&quot;sequence&quot;>SEQ_"/>
            <statements xsi:type="statements:Feature" begin="1862" end="1902">
              <expression xsi:type="expressions:CallSet" begin="1862" end="1902">
                <calls begin="1862" end="1881" name="eContainer" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1873" end="1880" value="Class"/>
                </calls>
                <calls begin="1882" end="1886" name="name" prefix=""/>
                <calls begin="1887" end="1902" name="toSqlNotation" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1904" end="1955" value="&lt;/param>&#xD;&#xA;            &lt;/generator>&#xD;&#xA;        &lt;/id>&#xD;&#xA;"/>
          </thenStatements>
          <elseStatements xsi:type="statements:Text" begin="1978" end="2134" value="        &lt;!-- Technical ID -->&#xD;&#xA;        &lt;id name=&quot;id&quot; type=&quot;string&quot; unsaved-value=&quot;null&quot; column=&quot;ID&quot;>&#xD;&#xA;            &lt;generator class=&quot;uuid&quot;/>&#xD;&#xA;        &lt;/id>&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2141" end="2172" value="&#xD;&#xA;        &lt;!-- Properties -->&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="2174" end="2247">
          <expression xsi:type="expressions:CallSet" begin="2174" end="2247">
            <calls begin="2174" end="2183" name="attribute" prefix="">
              <filter xsi:type="expressions:Not" begin="2184" end="2190">
                <expression xsi:type="expressions:CallSet" begin="2186" end="2190">
                  <calls begin="2186" end="2190" name="isPK" prefix=""/>
                </expression>
              </filter>
            </calls>
            <calls begin="2192" end="2233" name="filterExistProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2212" end="2225" value="association"/>
              <arguments xsi:type="expressions:BooleanLiteral" begin="2227" end="2232"/>
            </calls>
            <calls begin="2234" end="2247" name="genProperties" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2249" end="2284" value="&#xD;&#xA;&#xD;&#xA;        &lt;!-- Associations -->&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="2286" end="2392">
          <expression xsi:type="expressions:CallSet" begin="2286" end="2392">
            <calls begin="2286" end="2303" name="getAssociations" prefix=""/>
            <calls begin="2304" end="2325" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2311" end="2324" value="Association"/>
            </calls>
            <calls begin="2326" end="2363" name="oppositeAttributeOf" prefix="">
              <arguments xsi:type="expressions:CallSet" begin="2346" end="2362">
                <calls begin="2346" end="2362" name="current" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2354" end="2361" value="Class"/>
                </calls>
              </arguments>
              <filter xsi:type="expressions:CallSet" begin="2364" end="2375">
                <calls begin="2364" end="2375" name="isNavigable" prefix=""/>
              </filter>
            </calls>
            <calls begin="2377" end="2392" name="genAssociations" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2394" end="2428" value="&#xD;&#xA;&#xD;&#xA;        &lt;!-- Inheritance -->&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="2430" end="2437">
          <expression xsi:type="expressions:CallSet" begin="2430" end="2437">
            <calls begin="2430" end="2437" name="nPush" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2439" end="2441" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="2443" end="2512">
          <expression xsi:type="expressions:CallSet" begin="2443" end="2512">
            <calls begin="2443" end="2451" name="subClass" prefix=""/>
            <calls begin="2452" end="2495" name="filterWithStereotype" prefix="">
              <arguments xsi:type="expressions:CallSet" begin="2473" end="2494">
                <calls begin="2473" end="2494" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2485" end="2493" value="Entity"/>
                </calls>
              </arguments>
            </calls>
            <calls begin="2496" end="2512" name="genInheritance" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2514" end="2516" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="2518" end="2524">
          <expression xsi:type="expressions:CallSet" begin="2518" end="2524">
            <calls begin="2518" end="2524" name="nPop" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2526" end="2564" value="&#xD;&#xA;    &lt;/class>&#xD;&#xA;&#xD;&#xA;&lt;/hibernate-mapping>"/>
      </scripts>
      <scripts begin="2617" end="2778">
        <descriptor begin="2577" end="2613" name="genProperties" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2617" end="2617" value=""/>
        <statements xsi:type="statements:If" begin="2626" end="2773">
          <condition xsi:type="expressions:Parenthesis" begin="2626" end="2652">
            <expression xsi:type="expressions:Operator" begin="2627" end="2651" operator="&amp;&amp;">
              <operands xsi:type="expressions:Not" begin="2627" end="2637">
                <expression xsi:type="expressions:CallSet" begin="2628" end="2637">
                  <calls begin="2628" end="2637" name="isDerived" prefix=""/>
                </expression>
              </operands>
              <operands xsi:type="expressions:Operator" begin="2641" end="2651" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2641" end="2646">
                  <calls begin="2641" end="2646" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="2650" end="2651" value="1"/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2657" end="2681" value="        &lt;property name=&quot;"/>
          <thenStatements xsi:type="statements:Feature" begin="2683" end="2687">
            <expression xsi:type="expressions:CallSet" begin="2683" end="2687">
              <calls begin="2683" end="2687" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2689" end="2719" value="&quot;>&#xD;&#xA;            &lt;column name=&quot;"/>
          <thenStatements xsi:type="statements:Feature" begin="2721" end="2741">
            <expression xsi:type="expressions:CallSet" begin="2721" end="2741">
              <calls begin="2721" end="2725" name="name" prefix=""/>
              <calls begin="2726" end="2741" name="toSqlNotation" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2743" end="2769" value="&quot;/>&#xD;&#xA;        &lt;/property>&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="3125" end="10152">
        <descriptor begin="3083" end="3121" name="genAssociations" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3125" end="3125" value=""/>
        <statements xsi:type="statements:Comment" begin="3133" end="3140" value=" n---n "/>
        <statements xsi:type="statements:Text" begin="3146" end="3148" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="3157" end="10147">
          <condition xsi:type="expressions:Parenthesis" begin="3157" end="3175">
            <expression xsi:type="expressions:Operator" begin="3158" end="3174" operator="==">
              <operands xsi:type="expressions:CallSet" begin="3158" end="3166">
                <calls begin="3158" end="3166" name="opposite" prefix=""/>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="3170" end="3174"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3180" end="3180" value=""/>
          <thenStatements xsi:type="statements:Comment" begin="3188" end="3197" value=" |n|-->n "/>
          <thenStatements xsi:type="statements:Text" begin="3203" end="3203" value=""/>
          <thenStatements xsi:type="statements:If" begin="3216" end="6029">
            <condition xsi:type="expressions:Parenthesis" begin="3216" end="3228">
              <expression xsi:type="expressions:Operator" begin="3217" end="3227" operator="==">
                <operands xsi:type="expressions:CallSet" begin="3217" end="3222">
                  <calls begin="3217" end="3222" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="3226" end="3227" value="1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="3233" end="3233" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="3245" end="3254" value=" |n|-->1 "/>
            <thenStatements xsi:type="statements:Text" begin="3260" end="3260" value=""/>
            <thenStatements xsi:type="statements:If" begin="3277" end="4019">
              <condition xsi:type="expressions:Parenthesis" begin="3277" end="3307">
                <expression xsi:type="expressions:Operator" begin="3278" end="3306" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="3278" end="3301">
                    <calls begin="3278" end="3295" name="oppositeAttribute" prefix=""/>
                    <calls begin="3296" end="3301" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="3305" end="3306" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="3312" end="3312" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="3328" end="3337" value=" |1|-->1 "/>
              <thenStatements xsi:type="statements:Text" begin="3343" end="3351" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="3353" end="3373">
                <expression xsi:type="expressions:CallSet" begin="3353" end="3373">
                  <calls begin="3353" end="3373" name="genDiagram" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="3364" end="3372" value="1 -} 1"/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3375" end="3418" value="&#xD;&#xA;        &lt;many-to-one &#xD;&#xA;            name=&quot;"/>
              <thenStatements xsi:type="statements:Feature" begin="3420" end="3424">
                <expression xsi:type="expressions:CallSet" begin="3420" end="3424">
                  <calls begin="3420" end="3424" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3426" end="3449" value="&quot; &#xD;&#xA;            class=&quot;"/>
              <thenStatements xsi:type="statements:Feature" begin="3451" end="3469">
                <expression xsi:type="expressions:CallSet" begin="3451" end="3469">
                  <calls begin="3451" end="3455" name="type" prefix=""/>
                  <calls begin="3456" end="3469" name="entityPackage" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3471" end="3472" value="."/>
              <thenStatements xsi:type="statements:Feature" begin="3474" end="3483">
                <expression xsi:type="expressions:CallSet" begin="3474" end="3483">
                  <calls begin="3474" end="3478" name="type" prefix=""/>
                  <calls begin="3479" end="3483" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3485" end="3512" value="&quot; &#xD;&#xA;            column=&quot;FK_"/>
              <thenStatements xsi:type="statements:Feature" begin="3514" end="3539">
                <expression xsi:type="expressions:CallSet" begin="3514" end="3539">
                  <calls begin="3514" end="3518" name="type" prefix=""/>
                  <calls begin="3519" end="3523" name="name" prefix=""/>
                  <calls begin="3524" end="3539" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3541" end="3542" value="_"/>
              <thenStatements xsi:type="statements:Feature" begin="3544" end="3564">
                <expression xsi:type="expressions:CallSet" begin="3544" end="3564">
                  <calls begin="3544" end="3548" name="name" prefix=""/>
                  <calls begin="3549" end="3564" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3566" end="3618" value="_ID&quot;&#xD;&#xA;            cascade=&quot;persist,merge,save-update"/>
              <thenStatements xsi:type="statements:If" begin="3623" end="3646">
                <condition xsi:type="expressions:Parenthesis" begin="3623" end="3636">
                  <expression xsi:type="expressions:CallSet" begin="3624" end="3635">
                    <calls begin="3624" end="3635" name="isComposite" prefix=""/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="3639" end="3646" value=",delete"/>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3651" end="3666" value="&quot;&#xD;&#xA;            "/>
              <thenStatements xsi:type="statements:If" begin="3671" end="3698">
                <condition xsi:type="expressions:Parenthesis" begin="3671" end="3682">
                  <expression xsi:type="expressions:Operator" begin="3672" end="3681" operator=">">
                    <operands xsi:type="expressions:CallSet" begin="3672" end="3677">
                      <calls begin="3672" end="3677" name="lower" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="3680" end="3681"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="3685" end="3698" value="unique=&quot;true&quot;"/>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3703" end="3707" value="/>&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="3731" end="3731" value=""/>
              <elseStatements xsi:type="statements:Comment" begin="3747" end="3756" value=" |*|-->1 "/>
              <elseStatements xsi:type="statements:Text" begin="3762" end="3770" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="3772" end="3792">
                <expression xsi:type="expressions:CallSet" begin="3772" end="3792">
                  <calls begin="3772" end="3792" name="genDiagram" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="3783" end="3791" value="* -} 1"/>
                  </calls>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3794" end="3837" value="&#xD;&#xA;        &lt;many-to-one &#xD;&#xA;            name=&quot;"/>
              <elseStatements xsi:type="statements:Feature" begin="3839" end="3843">
                <expression xsi:type="expressions:CallSet" begin="3839" end="3843">
                  <calls begin="3839" end="3843" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3845" end="3868" value="&quot; &#xD;&#xA;            class=&quot;"/>
              <elseStatements xsi:type="statements:Feature" begin="3870" end="3888">
                <expression xsi:type="expressions:CallSet" begin="3870" end="3888">
                  <calls begin="3870" end="3874" name="type" prefix=""/>
                  <calls begin="3875" end="3888" name="entityPackage" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3890" end="3891" value="."/>
              <elseStatements xsi:type="statements:Feature" begin="3893" end="3902">
                <expression xsi:type="expressions:CallSet" begin="3893" end="3902">
                  <calls begin="3893" end="3897" name="type" prefix=""/>
                  <calls begin="3898" end="3902" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3904" end="3931" value="&quot; &#xD;&#xA;            column=&quot;FK_"/>
              <elseStatements xsi:type="statements:Feature" begin="3933" end="3958">
                <expression xsi:type="expressions:CallSet" begin="3933" end="3958">
                  <calls begin="3933" end="3937" name="type" prefix=""/>
                  <calls begin="3938" end="3942" name="name" prefix=""/>
                  <calls begin="3943" end="3958" name="toSqlNotation" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3960" end="3961" value="_"/>
              <elseStatements xsi:type="statements:Feature" begin="3963" end="3983">
                <expression xsi:type="expressions:CallSet" begin="3963" end="3983">
                  <calls begin="3963" end="3967" name="name" prefix=""/>
                  <calls begin="3968" end="3983" name="toSqlNotation" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3985" end="4007" value="_ID&quot;&#xD;&#xA;            />&#xD;&#xA;"/>
            </thenStatements>
            <elseStatements xsi:type="statements:Text" begin="4046" end="4046" value=""/>
            <elseStatements xsi:type="statements:Comment" begin="4058" end="4065" value=" n-->* "/>
            <elseStatements xsi:type="statements:Text" begin="4071" end="4071" value=""/>
            <elseStatements xsi:type="statements:If" begin="4088" end="6014">
              <condition xsi:type="expressions:Parenthesis" begin="4088" end="4118">
                <expression xsi:type="expressions:Operator" begin="4089" end="4117" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="4089" end="4112">
                    <calls begin="4089" end="4106" name="oppositeAttribute" prefix=""/>
                    <calls begin="4107" end="4112" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="4116" end="4117" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="4123" end="4123" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="4139" end="4148" value=" |1|-->* "/>
              <thenStatements xsi:type="statements:Text" begin="4154" end="4162" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="4164" end="4184">
                <expression xsi:type="expressions:CallSet" begin="4164" end="4184">
                  <calls begin="4164" end="4184" name="genDiagram" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="4175" end="4183" value="1 -} *"/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4186" end="4188" value="&#xD;&#xA;"/>
              <thenStatements xsi:type="statements:If" begin="4209" end="5008">
                <condition xsi:type="expressions:Parenthesis" begin="4209" end="4220">
                  <expression xsi:type="expressions:CallSet" begin="4210" end="4219">
                    <calls begin="4210" end="4219" name="isOrdered" prefix=""/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="4225" end="4245" value="        &lt;list name=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="4247" end="4251">
                  <expression xsi:type="expressions:CallSet" begin="4247" end="4251">
                    <calls begin="4247" end="4251" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="4253" end="4266" value="&quot; lazy=&quot;true&quot;"/>
                <thenStatements xsi:type="statements:If" begin="4271" end="4329">
                  <condition xsi:type="expressions:Parenthesis" begin="4271" end="4311">
                    <expression xsi:type="expressions:Operator" begin="4272" end="4310" operator="||">
                      <operands xsi:type="expressions:CallSet" begin="4272" end="4283">
                        <calls begin="4272" end="4283" name="isComposite" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:Operator" begin="4287" end="4310" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="4287" end="4298">
                          <calls begin="4287" end="4298" name="aggregation" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:StringLiteral" begin="4302" end="4310" value="shared"/>
                      </operands>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="4315" end="4329" value=" cascade=&quot;all&quot;"/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="4334" end="4364" value=">&#xA;            &lt;key column=&quot;FK_"/>
                <thenStatements xsi:type="statements:Feature" begin="4366" end="4392">
                  <expression xsi:type="expressions:CallSet" begin="4366" end="4392">
                    <calls begin="4366" end="4371" name="class" prefix=""/>
                    <calls begin="4372" end="4376" name="name" prefix=""/>
                    <calls begin="4377" end="4392" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="4394" end="4395" value="_"/>
                <thenStatements xsi:type="statements:Feature" begin="4397" end="4417">
                  <expression xsi:type="expressions:CallSet" begin="4397" end="4417">
                    <calls begin="4397" end="4401" name="name" prefix=""/>
                    <calls begin="4402" end="4417" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="4419" end="4523" value="_ID&quot;/>             &#xD;&#xA;            &lt;list-index column=&quot;IDX&quot;/>            &#xA;            &lt;one-to-many class=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="4525" end="4543">
                  <expression xsi:type="expressions:CallSet" begin="4525" end="4543">
                    <calls begin="4525" end="4529" name="type" prefix=""/>
                    <calls begin="4530" end="4543" name="entityPackage" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="4545" end="4546" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="4548" end="4557">
                  <expression xsi:type="expressions:CallSet" begin="4548" end="4557">
                    <calls begin="4548" end="4552" name="type" prefix=""/>
                    <calls begin="4553" end="4557" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="4559" end="4597" value="&quot;/>&#xD;&#xA;        &lt;/list>                &#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="4629" end="4669" value="                &lt;!-- Aggregation Type : "/>
                <elseStatements xsi:type="statements:Feature" begin="4671" end="4682">
                  <expression xsi:type="expressions:CallSet" begin="4671" end="4682">
                    <calls begin="4671" end="4682" name="aggregation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="4684" end="4708" value=" -->&#xA;        &lt;set name=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="4710" end="4714">
                  <expression xsi:type="expressions:CallSet" begin="4710" end="4714">
                    <calls begin="4710" end="4714" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="4716" end="4729" value="&quot; lazy=&quot;true&quot;"/>
                <elseStatements xsi:type="statements:If" begin="4734" end="4792">
                  <condition xsi:type="expressions:Parenthesis" begin="4734" end="4774">
                    <expression xsi:type="expressions:Operator" begin="4735" end="4773" operator="||">
                      <operands xsi:type="expressions:CallSet" begin="4735" end="4746">
                        <calls begin="4735" end="4746" name="isComposite" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:Operator" begin="4750" end="4773" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="4750" end="4761">
                          <calls begin="4750" end="4761" name="aggregation" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:StringLiteral" begin="4765" end="4773" value="shared"/>
                      </operands>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="4778" end="4792" value=" cascade=&quot;all&quot;"/>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="4797" end="4828" value="> &#xA;            &lt;key column=&quot;FK_"/>
                <elseStatements xsi:type="statements:Feature" begin="4830" end="4856">
                  <expression xsi:type="expressions:CallSet" begin="4830" end="4856">
                    <calls begin="4830" end="4835" name="class" prefix=""/>
                    <calls begin="4836" end="4840" name="name" prefix=""/>
                    <calls begin="4841" end="4856" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="4858" end="4859" value="_"/>
                <elseStatements xsi:type="statements:Feature" begin="4861" end="4881">
                  <expression xsi:type="expressions:CallSet" begin="4861" end="4881">
                    <calls begin="4861" end="4865" name="name" prefix=""/>
                    <calls begin="4866" end="4881" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="4883" end="4935" value="_ID&quot;/>            &#xD;&#xA;            &lt;one-to-many class=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="4937" end="4955">
                  <expression xsi:type="expressions:CallSet" begin="4937" end="4955">
                    <calls begin="4937" end="4941" name="type" prefix=""/>
                    <calls begin="4942" end="4955" name="entityPackage" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="4957" end="4958" value="."/>
                <elseStatements xsi:type="statements:Feature" begin="4960" end="4969">
                  <expression xsi:type="expressions:CallSet" begin="4960" end="4969">
                    <calls begin="4960" end="4964" name="type" prefix=""/>
                    <calls begin="4965" end="4969" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="4971" end="4992" value="&quot;/>&#xD;&#xA;        &lt;/set>&#xD;&#xA;"/>
              </thenStatements>
              <elseStatements xsi:type="statements:Text" begin="5039" end="5039" value=""/>
              <elseStatements xsi:type="statements:Comment" begin="5055" end="5064" value=" |*|-->* "/>
              <elseStatements xsi:type="statements:Text" begin="5070" end="5078" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="5080" end="5100">
                <expression xsi:type="expressions:CallSet" begin="5080" end="5100">
                  <calls begin="5080" end="5100" name="genDiagram" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="5091" end="5099" value="* -} *"/>
                  </calls>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="5102" end="5104" value="&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:If" begin="5125" end="5995">
                <condition xsi:type="expressions:Parenthesis" begin="5125" end="5136">
                  <expression xsi:type="expressions:CallSet" begin="5126" end="5135">
                    <calls begin="5126" end="5135" name="isOrdered" prefix=""/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="5141" end="5161" value="        &lt;list name=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="5163" end="5167">
                  <expression xsi:type="expressions:CallSet" begin="5163" end="5167">
                    <calls begin="5163" end="5167" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5169" end="5178" value="&quot; table=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="5180" end="5225">
                  <expression xsi:type="expressions:CallSet" begin="5180" end="5225">
                    <calls begin="5180" end="5199" name="oppositeAttribute" prefix=""/>
                    <calls begin="5200" end="5204" name="type" prefix=""/>
                    <calls begin="5205" end="5209" name="name" prefix=""/>
                    <calls begin="5210" end="5225" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5227" end="5228" value="_"/>
                <thenStatements xsi:type="statements:Feature" begin="5230" end="5250">
                  <expression xsi:type="expressions:CallSet" begin="5230" end="5250">
                    <calls begin="5230" end="5234" name="name" prefix=""/>
                    <calls begin="5235" end="5250" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5252" end="5280" value="&quot;>&#xA;            &lt;key column=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="5282" end="5327">
                  <expression xsi:type="expressions:CallSet" begin="5282" end="5327">
                    <calls begin="5282" end="5301" name="oppositeAttribute" prefix=""/>
                    <calls begin="5302" end="5306" name="type" prefix=""/>
                    <calls begin="5307" end="5311" name="name" prefix=""/>
                    <calls begin="5312" end="5327" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5329" end="5438" value="_ID&quot;/>&#xA;            &lt;index column=&quot;IDX&quot;/>&#xD;&#xA;            &lt;many-to-many                 &#xD;&#xA;                class=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="5440" end="5458">
                  <expression xsi:type="expressions:CallSet" begin="5440" end="5458">
                    <calls begin="5440" end="5444" name="type" prefix=""/>
                    <calls begin="5445" end="5458" name="entityPackage" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5460" end="5461" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="5463" end="5472">
                  <expression xsi:type="expressions:CallSet" begin="5463" end="5472">
                    <calls begin="5463" end="5467" name="type" prefix=""/>
                    <calls begin="5468" end="5472" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5474" end="5501" value="&quot;&#xD;&#xA;                column=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="5503" end="5528">
                  <expression xsi:type="expressions:CallSet" begin="5503" end="5528">
                    <calls begin="5503" end="5507" name="type" prefix=""/>
                    <calls begin="5508" end="5512" name="name" prefix=""/>
                    <calls begin="5513" end="5528" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5530" end="5572" value="_ID&quot;/>&#xD;&#xA;         &lt;/list>                &#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="5600" end="5619" value="        &lt;set name=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="5621" end="5625">
                  <expression xsi:type="expressions:CallSet" begin="5621" end="5625">
                    <calls begin="5621" end="5625" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="5627" end="5636" value="&quot; table=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="5638" end="5683">
                  <expression xsi:type="expressions:CallSet" begin="5638" end="5683">
                    <calls begin="5638" end="5657" name="oppositeAttribute" prefix=""/>
                    <calls begin="5658" end="5662" name="type" prefix=""/>
                    <calls begin="5663" end="5667" name="name" prefix=""/>
                    <calls begin="5668" end="5683" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="5685" end="5686" value="_"/>
                <elseStatements xsi:type="statements:Feature" begin="5688" end="5708">
                  <expression xsi:type="expressions:CallSet" begin="5688" end="5708">
                    <calls begin="5688" end="5692" name="name" prefix=""/>
                    <calls begin="5693" end="5708" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="5710" end="5738" value="&quot;>&#xA;            &lt;key column=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="5740" end="5785">
                  <expression xsi:type="expressions:CallSet" begin="5740" end="5785">
                    <calls begin="5740" end="5759" name="oppositeAttribute" prefix=""/>
                    <calls begin="5760" end="5764" name="type" prefix=""/>
                    <calls begin="5765" end="5769" name="name" prefix=""/>
                    <calls begin="5770" end="5785" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="5787" end="5861" value="_ID&quot;/>&#xA;            &lt;many-to-many                 &#xD;&#xA;                class=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="5863" end="5881">
                  <expression xsi:type="expressions:CallSet" begin="5863" end="5881">
                    <calls begin="5863" end="5867" name="type" prefix=""/>
                    <calls begin="5868" end="5881" name="entityPackage" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="5883" end="5884" value="."/>
                <elseStatements xsi:type="statements:Feature" begin="5886" end="5895">
                  <expression xsi:type="expressions:CallSet" begin="5886" end="5895">
                    <calls begin="5886" end="5890" name="type" prefix=""/>
                    <calls begin="5891" end="5895" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="5897" end="5924" value="&quot;&#xD;&#xA;                column=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="5926" end="5951">
                  <expression xsi:type="expressions:CallSet" begin="5926" end="5951">
                    <calls begin="5926" end="5930" name="type" prefix=""/>
                    <calls begin="5931" end="5935" name="name" prefix=""/>
                    <calls begin="5936" end="5951" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="5953" end="5978" value="_ID&quot;/>&#xD;&#xA;         &lt;/set>&#xD;&#xA;"/>
              </elseStatements>
            </elseStatements>
          </thenStatements>
          <elseStatements xsi:type="statements:Text" begin="6052" end="6052" value=""/>
          <elseStatements xsi:type="statements:Comment" begin="6060" end="6068" value=" n&lt;-->n "/>
          <elseStatements xsi:type="statements:Text" begin="6074" end="6074" value=""/>
          <elseStatements xsi:type="statements:If" begin="6087" end="10136">
            <condition xsi:type="expressions:Parenthesis" begin="6087" end="6099">
              <expression xsi:type="expressions:Operator" begin="6088" end="6098" operator="==">
                <operands xsi:type="expressions:CallSet" begin="6088" end="6093">
                  <calls begin="6088" end="6093" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="6097" end="6098" value="1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="6104" end="6104" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="6116" end="6124" value=" n&lt;-->1 "/>
            <thenStatements xsi:type="statements:Text" begin="6130" end="6130" value=""/>
            <thenStatements xsi:type="statements:If" begin="6147" end="8167">
              <condition xsi:type="expressions:Parenthesis" begin="6147" end="6177">
                <expression xsi:type="expressions:Operator" begin="6148" end="6176" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="6148" end="6171">
                    <calls begin="6148" end="6165" name="oppositeAttribute" prefix=""/>
                    <calls begin="6166" end="6171" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="6175" end="6176" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="6182" end="6182" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="6198" end="6206" value=" 1&lt;-->1 "/>
              <thenStatements xsi:type="statements:Text" begin="6212" end="6212" value=""/>
              <thenStatements xsi:type="statements:If" begin="6233" end="7178">
                <condition xsi:type="expressions:Parenthesis" begin="6233" end="6473">
                  <expression xsi:type="expressions:Operator" begin="6238" end="6450" operator="||">
                    <operands xsi:type="expressions:Parenthesis" begin="6238" end="6282">
                      <expression xsi:type="expressions:Operator" begin="6239" end="6281" operator="&amp;&amp;">
                        <operands xsi:type="expressions:Operator" begin="6239" end="6249" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="6239" end="6244">
                            <calls begin="6239" end="6244" name="lower" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="6248" end="6249"/>
                        </operands>
                        <operands xsi:type="expressions:Operator" begin="6253" end="6281" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="6253" end="6276">
                            <calls begin="6253" end="6270" name="oppositeAttribute" prefix=""/>
                            <calls begin="6271" end="6276" name="lower" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="6280" end="6281" value="1"/>
                        </operands>
                      </expression>
                    </operands>
                    <operands xsi:type="expressions:Parenthesis" begin="6311" end="6450">
                      <expression xsi:type="expressions:Operator" begin="6317" end="6423" operator="&amp;&amp;">
                        <operands xsi:type="expressions:Not" begin="6317" end="6362">
                          <expression xsi:type="expressions:Parenthesis" begin="6318" end="6362">
                            <expression xsi:type="expressions:Operator" begin="6319" end="6361" operator="&amp;&amp;">
                              <operands xsi:type="expressions:Operator" begin="6319" end="6329" operator="==">
                                <operands xsi:type="expressions:CallSet" begin="6319" end="6324">
                                  <calls begin="6319" end="6324" name="lower" prefix=""/>
                                </operands>
                                <operands xsi:type="expressions:IntegerLiteral" begin="6328" end="6329"/>
                              </operands>
                              <operands xsi:type="expressions:Operator" begin="6333" end="6361" operator="==">
                                <operands xsi:type="expressions:CallSet" begin="6333" end="6356">
                                  <calls begin="6333" end="6350" name="oppositeAttribute" prefix=""/>
                                  <calls begin="6351" end="6356" name="lower" prefix=""/>
                                </operands>
                                <operands xsi:type="expressions:IntegerLiteral" begin="6360" end="6361" value="1"/>
                              </operands>
                            </expression>
                          </expression>
                        </operands>
                        <operands xsi:type="expressions:Operator" begin="6396" end="6423" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="6396" end="6412">
                            <calls begin="6396" end="6412" name="isMainEndPoint" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:StringLiteral" begin="6416" end="6423" value="false"/>
                        </operands>
                      </expression>
                    </operands>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="6476" end="6477" value=" "/>
                <thenStatements xsi:type="statements:Comment" begin="6481" end="6501" value=" test for recursive "/>
                <thenStatements xsi:type="statements:Text" begin="6505" end="6507" value="&#xD;&#xA;"/>
                <thenStatements xsi:type="statements:Comment" begin="6527" end="6537" value=" |1|&lt;-->1 "/>
                <thenStatements xsi:type="statements:Text" begin="6543" end="6551" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="6553" end="6574">
                  <expression xsi:type="expressions:CallSet" begin="6553" end="6574">
                    <calls begin="6553" end="6574" name="genDiagram" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="6564" end="6573" value="1 {-} 1"/>
                    </calls>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="6576" end="6618" value="&#xD;&#xA;        &lt;one-to-one &#xD;&#xA;            name=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="6620" end="6624">
                  <expression xsi:type="expressions:CallSet" begin="6620" end="6624">
                    <calls begin="6620" end="6624" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="6626" end="6661" value="&quot;             &#xD;&#xA;            class=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="6663" end="6681">
                  <expression xsi:type="expressions:CallSet" begin="6663" end="6681">
                    <calls begin="6663" end="6667" name="type" prefix=""/>
                    <calls begin="6668" end="6681" name="entityPackage" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="6683" end="6684" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="6686" end="6695">
                  <expression xsi:type="expressions:CallSet" begin="6686" end="6695">
                    <calls begin="6686" end="6690" name="type" prefix=""/>
                    <calls begin="6691" end="6695" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="6697" end="6727" value="&quot; &#xD;&#xA;            property-ref=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="6729" end="6742">
                  <expression xsi:type="expressions:CallSet" begin="6729" end="6742">
                    <calls begin="6729" end="6737" name="opposite" prefix=""/>
                    <calls begin="6738" end="6742" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="6744" end="6776" value="&quot;&#xD;&#xA;            cascade=&quot;all&quot;/>&#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="6804" end="6804" value=""/>
                <elseStatements xsi:type="statements:Comment" begin="6824" end="6834" value=" 1&lt;-->|1| "/>
                <elseStatements xsi:type="statements:Text" begin="6840" end="6848" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="6850" end="6871">
                  <expression xsi:type="expressions:CallSet" begin="6850" end="6871">
                    <calls begin="6850" end="6871" name="genDiagram" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="6861" end="6870" value="1 {-} 1"/>
                    </calls>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="6873" end="6916" value="&#xD;&#xA;        &lt;many-to-one &#xD;&#xA;            name=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="6918" end="6922">
                  <expression xsi:type="expressions:CallSet" begin="6918" end="6922">
                    <calls begin="6918" end="6922" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="6924" end="6959" value="&quot;             &#xD;&#xA;            class=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="6961" end="6979">
                  <expression xsi:type="expressions:CallSet" begin="6961" end="6979">
                    <calls begin="6961" end="6965" name="type" prefix=""/>
                    <calls begin="6966" end="6979" name="entityPackage" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="6981" end="6982" value="."/>
                <elseStatements xsi:type="statements:Feature" begin="6984" end="6993">
                  <expression xsi:type="expressions:CallSet" begin="6984" end="6993">
                    <calls begin="6984" end="6988" name="type" prefix=""/>
                    <calls begin="6989" end="6993" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="6995" end="7022" value="&quot; &#xD;&#xA;            column=&quot;FK_"/>
                <elseStatements xsi:type="statements:Feature" begin="7024" end="7049">
                  <expression xsi:type="expressions:CallSet" begin="7024" end="7049">
                    <calls begin="7024" end="7028" name="type" prefix=""/>
                    <calls begin="7029" end="7033" name="name" prefix=""/>
                    <calls begin="7034" end="7049" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="7051" end="7052" value="_"/>
                <elseStatements xsi:type="statements:Feature" begin="7054" end="7074">
                  <expression xsi:type="expressions:CallSet" begin="7054" end="7074">
                    <calls begin="7054" end="7058" name="name" prefix=""/>
                    <calls begin="7059" end="7074" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="7076" end="7121" value="_ID&quot;&#xD;&#xA;            cascade=&quot;all&quot;&#xD;&#xA;            "/>
                <elseStatements xsi:type="statements:If" begin="7126" end="7153">
                  <condition xsi:type="expressions:Parenthesis" begin="7126" end="7137">
                    <expression xsi:type="expressions:Operator" begin="7127" end="7136" operator=">">
                      <operands xsi:type="expressions:CallSet" begin="7127" end="7132">
                        <calls begin="7127" end="7132" name="lower" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="7135" end="7136"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="7140" end="7153" value="unique=&quot;true&quot;"/>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="7158" end="7162" value="/>&#xD;&#xA;"/>
              </thenStatements>
              <elseStatements xsi:type="statements:Text" begin="7209" end="7209" value=""/>
              <elseStatements xsi:type="statements:Comment" begin="7225" end="7233" value=" *&lt;-->1 "/>
              <elseStatements xsi:type="statements:Text" begin="7239" end="7239" value=""/>
              <elseStatements xsi:type="statements:Comment" begin="7259" end="7320" value="if (    isMainEndPoint()  == &quot;true&quot; || opposite.upper != 1 ){"/>
              <elseStatements xsi:type="statements:Text" begin="7326" end="7326" value=""/>
              <elseStatements xsi:type="statements:Comment" begin="7346" end="7356" value=" |*|&lt;-->1 "/>
              <elseStatements xsi:type="statements:Text" begin="7362" end="7370" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="7372" end="7393">
                <expression xsi:type="expressions:CallSet" begin="7372" end="7393">
                  <calls begin="7372" end="7393" name="genDiagram" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="7383" end="7392" value="* {-} 1"/>
                  </calls>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7395" end="7451" value="&#xD;&#xA;        &lt;many-to-one             &#xD;&#xA;            class=&quot;"/>
              <elseStatements xsi:type="statements:Feature" begin="7453" end="7471">
                <expression xsi:type="expressions:CallSet" begin="7453" end="7471">
                  <calls begin="7453" end="7457" name="type" prefix=""/>
                  <calls begin="7458" end="7471" name="entityPackage" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7473" end="7474" value="."/>
              <elseStatements xsi:type="statements:Feature" begin="7476" end="7485">
                <expression xsi:type="expressions:CallSet" begin="7476" end="7485">
                  <calls begin="7476" end="7480" name="type" prefix=""/>
                  <calls begin="7481" end="7485" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7487" end="7513" value="&quot;&#xD;&#xA;            column=&quot;FK_"/>
              <elseStatements xsi:type="statements:Feature" begin="7515" end="7540">
                <expression xsi:type="expressions:CallSet" begin="7515" end="7540">
                  <calls begin="7515" end="7519" name="type" prefix=""/>
                  <calls begin="7520" end="7524" name="name" prefix=""/>
                  <calls begin="7525" end="7540" name="toSqlNotation" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7542" end="7543" value="_"/>
              <elseStatements xsi:type="statements:Feature" begin="7545" end="7565">
                <expression xsi:type="expressions:CallSet" begin="7545" end="7565">
                  <calls begin="7545" end="7549" name="name" prefix=""/>
                  <calls begin="7550" end="7565" name="toSqlNotation" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7567" end="7591" value="_ID&quot;&#xD;&#xA;            name=&quot;"/>
              <elseStatements xsi:type="statements:Feature" begin="7593" end="7597">
                <expression xsi:type="expressions:CallSet" begin="7593" end="7597">
                  <calls begin="7593" end="7597" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7599" end="7600" value="&quot;"/>
              <elseStatements xsi:type="statements:If" begin="7605" end="7645">
                <condition xsi:type="expressions:Parenthesis" begin="7605" end="7627">
                  <expression xsi:type="expressions:CallSet" begin="7606" end="7626">
                    <calls begin="7606" end="7614" name="opposite" prefix=""/>
                    <calls begin="7615" end="7626" name="isComposite" prefix=""/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="7631" end="7645" value=" cascade=&quot;all&quot;"/>
              </elseStatements>
              <elseStatements xsi:type="statements:If" begin="7655" end="7725">
                <condition xsi:type="expressions:Parenthesis" begin="7655" end="7675">
                  <expression xsi:type="expressions:CallSet" begin="7656" end="7674">
                    <calls begin="7656" end="7664" name="opposite" prefix=""/>
                    <calls begin="7665" end="7674" name="isOrdered" prefix=""/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="7679" end="7725" value=" not-null=&quot;true&quot; insert=&quot;false&quot; update=&quot;false&quot;"/>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7730" end="7747" value="&#xA;            />&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Comment" begin="7767" end="8122" value=" &lt;%}else{%>&#xD;&#xA;                &lt;%-*&lt;-->|1|-%>&#xD;&#xA;        &lt;%genDiagram(&quot;* {-} 1&quot;)%>&#xD;&#xA;        &lt;set name=&quot;&lt;%name%>&quot; inverse=&quot;true&quot;>&#xD;&#xA;            &lt;key column=&quot;FK_&lt;%type.name.toSqlNotation()%>_&lt;%name.toSqlNotation()%>_ID&quot;/>&#xD;&#xA;            &lt;one-to-many class=&quot;&lt;%baseImports%>.&lt;%projectName%>.business.&lt;%type.package.normalizedName%>.&lt;%type.name%>&quot;/>&#xD;&#xA;         &lt;/set> "/>
              <elseStatements xsi:type="statements:Text" begin="8128" end="8128" value=""/>
              <elseStatements xsi:type="statements:Comment" begin="8148" end="8149" value="}"/>
            </thenStatements>
            <elseStatements xsi:type="statements:Text" begin="8195" end="8203" value="        "/>
            <elseStatements xsi:type="statements:Comment" begin="8207" end="8215" value=" n&lt;-->* "/>
            <elseStatements xsi:type="statements:Text" begin="8219" end="8220" value=" "/>
            <elseStatements xsi:type="statements:Comment" begin="8224" end="8264" value=" the case *&lt;-->1 has already be traited "/>
            <elseStatements xsi:type="statements:Text" begin="8268" end="8270" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:If" begin="8287" end="10121">
              <condition xsi:type="expressions:Parenthesis" begin="8287" end="8317">
                <expression xsi:type="expressions:Operator" begin="8288" end="8316" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="8288" end="8311">
                    <calls begin="8288" end="8305" name="oppositeAttribute" prefix=""/>
                    <calls begin="8306" end="8311" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="8315" end="8316" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="8322" end="8322" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="8338" end="8348" value=" |1|&lt;-->* "/>
              <thenStatements xsi:type="statements:Text" begin="8354" end="8362" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="8364" end="8385">
                <expression xsi:type="expressions:CallSet" begin="8364" end="8385">
                  <calls begin="8364" end="8385" name="genDiagram" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="8375" end="8384" value="1 {-} *"/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="8387" end="8389" value="&#xD;&#xA;"/>
              <thenStatements xsi:type="statements:If" begin="8405" end="9165">
                <condition xsi:type="expressions:Parenthesis" begin="8405" end="8416">
                  <expression xsi:type="expressions:CallSet" begin="8406" end="8415">
                    <calls begin="8406" end="8415" name="isOrdered" prefix=""/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="8420" end="8442" value="&#x9;&#x9;        &lt;list name=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="8444" end="8448">
                  <expression xsi:type="expressions:CallSet" begin="8444" end="8448">
                    <calls begin="8444" end="8448" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8450" end="8452" value="&quot; "/>
                <thenStatements xsi:type="statements:If" begin="8457" end="8501">
                  <condition xsi:type="expressions:Parenthesis" begin="8457" end="8470">
                    <expression xsi:type="expressions:CallSet" begin="8458" end="8469">
                      <calls begin="8458" end="8469" name="isComposite" prefix=""/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="8473" end="8501" value=" cascade=&quot;all-delete-orphan&quot;"/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8506" end="8538" value=">&#xA;&#x9;&#x9;            &lt;key column=&quot;FK_"/>
                <thenStatements xsi:type="statements:Feature" begin="8540" end="8585">
                  <expression xsi:type="expressions:CallSet" begin="8540" end="8585">
                    <calls begin="8540" end="8559" name="oppositeAttribute" prefix=""/>
                    <calls begin="8560" end="8564" name="type" prefix=""/>
                    <calls begin="8565" end="8569" name="name" prefix=""/>
                    <calls begin="8570" end="8585" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8587" end="8588" value="_"/>
                <thenStatements xsi:type="statements:Feature" begin="8590" end="8630">
                  <expression xsi:type="expressions:CallSet" begin="8590" end="8630">
                    <calls begin="8590" end="8609" name="oppositeAttribute" prefix=""/>
                    <calls begin="8610" end="8614" name="name" prefix=""/>
                    <calls begin="8615" end="8630" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8632" end="8689" value="_ID&quot; not-null=&quot;true&quot;/>&#xA;&#x9;&#x9;            &lt;list-index column=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="8691" end="8711">
                  <expression xsi:type="expressions:CallSet" begin="8691" end="8711">
                    <calls begin="8691" end="8695" name="name" prefix=""/>
                    <calls begin="8696" end="8711" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8713" end="8755" value="_IDX&quot;/>&#xA;&#x9;&#x9;            &lt;one-to-many class=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="8757" end="8775">
                  <expression xsi:type="expressions:CallSet" begin="8757" end="8775">
                    <calls begin="8757" end="8761" name="type" prefix=""/>
                    <calls begin="8762" end="8775" name="entityPackage" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8777" end="8778" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="8780" end="8789">
                  <expression xsi:type="expressions:CallSet" begin="8780" end="8789">
                    <calls begin="8780" end="8784" name="type" prefix=""/>
                    <calls begin="8785" end="8789" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8791" end="8814" value="&quot;/>&#xA;&#x9;&#x9;         &lt;/list>&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="8843" end="8864" value="&#x9;&#x9;        &lt;set name=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="8866" end="8870">
                  <expression xsi:type="expressions:CallSet" begin="8866" end="8870">
                    <calls begin="8866" end="8870" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="8872" end="8888" value="&quot; inverse=&quot;true&quot;"/>
                <elseStatements xsi:type="statements:If" begin="8893" end="8937">
                  <condition xsi:type="expressions:Parenthesis" begin="8893" end="8906">
                    <expression xsi:type="expressions:CallSet" begin="8894" end="8905">
                      <calls begin="8894" end="8905" name="isComposite" prefix=""/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="8909" end="8937" value=" cascade=&quot;all-delete-orphan&quot;"/>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="8942" end="8972" value=">&#xA;            &lt;key column=&quot;FK_"/>
                <elseStatements xsi:type="statements:Feature" begin="8974" end="9008">
                  <expression xsi:type="expressions:CallSet" begin="8974" end="9008">
                    <calls begin="8974" end="8982" name="opposite" prefix=""/>
                    <calls begin="8983" end="8987" name="type" prefix=""/>
                    <calls begin="8988" end="8992" name="name" prefix=""/>
                    <calls begin="8993" end="9008" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9010" end="9011" value="_"/>
                <elseStatements xsi:type="statements:Feature" begin="9013" end="9042">
                  <expression xsi:type="expressions:CallSet" begin="9013" end="9042">
                    <calls begin="9013" end="9021" name="opposite" prefix=""/>
                    <calls begin="9022" end="9026" name="name" prefix=""/>
                    <calls begin="9027" end="9042" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9044" end="9096" value="_ID&quot;/>            &#xD;&#xA;            &lt;one-to-many class=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="9098" end="9116">
                  <expression xsi:type="expressions:CallSet" begin="9098" end="9116">
                    <calls begin="9098" end="9102" name="type" prefix=""/>
                    <calls begin="9103" end="9116" name="entityPackage" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9118" end="9119" value="."/>
                <elseStatements xsi:type="statements:Feature" begin="9121" end="9130">
                  <expression xsi:type="expressions:CallSet" begin="9121" end="9130">
                    <calls begin="9121" end="9125" name="type" prefix=""/>
                    <calls begin="9126" end="9130" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9132" end="9154" value="&quot;/>&#xD;&#xA;         &lt;/set>&#xD;&#xA;"/>
              </thenStatements>
              <elseStatements xsi:type="statements:Text" begin="9195" end="9195" value=""/>
              <elseStatements xsi:type="statements:Comment" begin="9211" end="9219" value=" *&lt;-->* "/>
              <elseStatements xsi:type="statements:Text" begin="9225" end="9239" value="            &#xD;&#xA;"/>
              <elseStatements xsi:type="statements:If" begin="9260" end="10102">
                <condition xsi:type="expressions:Parenthesis" begin="9260" end="9289">
                  <expression xsi:type="expressions:Operator" begin="9262" end="9288" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="9262" end="9278">
                      <calls begin="9262" end="9278" name="isMainEndPoint" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="9282" end="9288" value="true"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="9294" end="9294" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="9314" end="9324" value=" |*|&lt;-->* "/>
                <thenStatements xsi:type="statements:Text" begin="9330" end="9338" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="9340" end="9361">
                  <expression xsi:type="expressions:CallSet" begin="9340" end="9361">
                    <calls begin="9340" end="9361" name="genDiagram" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="9351" end="9360" value="* {-} *"/>
                    </calls>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9363" end="9384" value="&#xD;&#xA;        &lt;set name=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="9386" end="9390">
                  <expression xsi:type="expressions:CallSet" begin="9386" end="9390">
                    <calls begin="9386" end="9390" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9392" end="9401" value="&quot; table=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="9403" end="9423">
                  <expression xsi:type="expressions:CallSet" begin="9403" end="9423">
                    <calls begin="9403" end="9407" name="name" prefix=""/>
                    <calls begin="9408" end="9423" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9425" end="9426" value="_"/>
                <thenStatements xsi:type="statements:Feature" begin="9428" end="9457">
                  <expression xsi:type="expressions:CallSet" begin="9428" end="9457">
                    <calls begin="9428" end="9436" name="opposite" prefix=""/>
                    <calls begin="9437" end="9441" name="name" prefix=""/>
                    <calls begin="9442" end="9457" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9459" end="9491" value="&quot;>&#xD;&#xA;            &lt;key column=&quot;FK_"/>
                <thenStatements xsi:type="statements:Feature" begin="9493" end="9513">
                  <expression xsi:type="expressions:CallSet" begin="9493" end="9513">
                    <calls begin="9493" end="9497" name="name" prefix=""/>
                    <calls begin="9498" end="9513" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9515" end="9590" value="_ID&quot;/>&#xD;&#xA;            &lt;many-to-many                 &#xD;&#xA;                class=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="9592" end="9610">
                  <expression xsi:type="expressions:CallSet" begin="9592" end="9610">
                    <calls begin="9592" end="9596" name="type" prefix=""/>
                    <calls begin="9597" end="9610" name="entityPackage" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9612" end="9613" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="9615" end="9624">
                  <expression xsi:type="expressions:CallSet" begin="9615" end="9624">
                    <calls begin="9615" end="9619" name="type" prefix=""/>
                    <calls begin="9620" end="9624" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9626" end="9653" value="&quot;&#xD;&#xA;                column=&quot;"/>
                <thenStatements xsi:type="statements:Feature" begin="9655" end="9675">
                  <expression xsi:type="expressions:CallSet" begin="9655" end="9675">
                    <calls begin="9655" end="9659" name="name" prefix=""/>
                    <calls begin="9660" end="9675" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9677" end="9702" value="_ID&quot;/>&#xD;&#xA;         &lt;/set>&#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="9730" end="9730" value=""/>
                <elseStatements xsi:type="statements:Comment" begin="9750" end="9760" value=" *&lt;-->|*| "/>
                <elseStatements xsi:type="statements:Text" begin="9766" end="9774" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="9776" end="9797">
                  <expression xsi:type="expressions:CallSet" begin="9776" end="9797">
                    <calls begin="9776" end="9797" name="genDiagram" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="9787" end="9796" value="* {-} *"/>
                    </calls>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9799" end="9820" value="&#xD;&#xA;        &lt;set name=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="9822" end="9826">
                  <expression xsi:type="expressions:CallSet" begin="9822" end="9826">
                    <calls begin="9822" end="9826" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9828" end="9875" value="&quot; inverse=&quot;true&quot;>&#xD;&#xA;            &lt;key column=&quot;FK_"/>
                <elseStatements xsi:type="statements:Feature" begin="9877" end="9897">
                  <expression xsi:type="expressions:CallSet" begin="9877" end="9897">
                    <calls begin="9877" end="9881" name="name" prefix=""/>
                    <calls begin="9882" end="9897" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9899" end="9974" value="_ID&quot;/>&#xD;&#xA;            &lt;many-to-many                 &#xD;&#xA;                class=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="9976" end="9994">
                  <expression xsi:type="expressions:CallSet" begin="9976" end="9994">
                    <calls begin="9976" end="9980" name="type" prefix=""/>
                    <calls begin="9981" end="9994" name="entityPackage" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="9996" end="9997" value="."/>
                <elseStatements xsi:type="statements:Feature" begin="9999" end="10008">
                  <expression xsi:type="expressions:CallSet" begin="9999" end="10008">
                    <calls begin="9999" end="10003" name="type" prefix=""/>
                    <calls begin="10004" end="10008" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="10010" end="10037" value="&quot;&#xD;&#xA;                column=&quot;"/>
                <elseStatements xsi:type="statements:Feature" begin="10039" end="10059">
                  <expression xsi:type="expressions:CallSet" begin="10039" end="10059">
                    <calls begin="10039" end="10043" name="name" prefix=""/>
                    <calls begin="10044" end="10059" name="toSqlNotation" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="10061" end="10086" value="_ID&quot;/>&#xD;&#xA;         &lt;/set>&#xD;&#xA;"/>
              </elseStatements>
            </elseStatements>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="10203" end="10845">
        <descriptor begin="10165" end="10199" name="genInheritance" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="10203" end="10261" value="&#xD;&#xA;        &lt;joined-subclass            &#xD;&#xA;            name=&quot;"/>
        <statements xsi:type="statements:Feature" begin="10263" end="10276">
          <expression xsi:type="expressions:CallSet" begin="10263" end="10276">
            <calls begin="10263" end="10276" name="entityPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10278" end="10279" value="."/>
        <statements xsi:type="statements:Feature" begin="10281" end="10285">
          <expression xsi:type="expressions:CallSet" begin="10281" end="10285">
            <calls begin="10281" end="10285" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10287" end="10310" value="&quot; &#xD;&#xA;            table=&quot;"/>
        <statements xsi:type="statements:Feature" begin="10312" end="10332">
          <expression xsi:type="expressions:CallSet" begin="10312" end="10332">
            <calls begin="10312" end="10316" name="name" prefix=""/>
            <calls begin="10317" end="10332" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10334" end="10424" value="&quot;&#xD;&#xA;            dynamic-update=&quot;true&quot;>&#xD;&#xA;            &#xD;&#xA;            &lt;key column=&quot;FK_INHERITS_"/>
        <statements xsi:type="statements:Feature" begin="10426" end="10454">
          <expression xsi:type="expressions:CallSet" begin="10426" end="10454">
            <calls begin="10426" end="10433" name="nPeek" prefix=""/>
            <calls begin="10434" end="10438" name="name" prefix=""/>
            <calls begin="10439" end="10454" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10456" end="10511" value="_ID&quot;/>&#xD;&#xA;            &#xD;&#xA;            &lt;!-- Properties -->&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="10513" end="10578">
          <expression xsi:type="expressions:CallSet" begin="10513" end="10578">
            <calls begin="10513" end="10522" name="attribute" prefix=""/>
            <calls begin="10523" end="10564" name="filterExistProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="10543" end="10556" value="association"/>
              <arguments xsi:type="expressions:BooleanLiteral" begin="10558" end="10563"/>
            </calls>
            <calls begin="10565" end="10578" name="genProperties" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10580" end="10619" value="&#xD;&#xA;&#xD;&#xA;            &lt;!-- Associations -->&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="10621" end="10727">
          <expression xsi:type="expressions:CallSet" begin="10621" end="10727">
            <calls begin="10621" end="10638" name="getAssociations" prefix=""/>
            <calls begin="10639" end="10660" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="10646" end="10659" value="Association"/>
            </calls>
            <calls begin="10661" end="10698" name="oppositeAttributeOf" prefix="">
              <arguments xsi:type="expressions:CallSet" begin="10681" end="10697">
                <calls begin="10681" end="10697" name="current" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="10689" end="10696" value="Class"/>
                </calls>
              </arguments>
              <filter xsi:type="expressions:CallSet" begin="10699" end="10710">
                <calls begin="10699" end="10710" name="isNavigable" prefix=""/>
              </filter>
            </calls>
            <calls begin="10712" end="10727" name="genAssociations" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10729" end="10767" value="&#xD;&#xA;&#xD;&#xA;            &lt;!-- Inheritance -->&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="10769" end="10776">
          <expression xsi:type="expressions:CallSet" begin="10769" end="10776">
            <calls begin="10769" end="10776" name="nPush" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="10780" end="10805">
          <expression xsi:type="expressions:CallSet" begin="10780" end="10805">
            <calls begin="10780" end="10788" name="subClass" prefix=""/>
            <calls begin="10789" end="10805" name="genInheritance" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="10809" end="10815">
          <expression xsi:type="expressions:CallSet" begin="10809" end="10815">
            <calls begin="10809" end="10815" name="nPop" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10817" end="10845" value="&#xD;&#xA;        &lt;/joined-subclass>"/>
      </scripts>
      <scripts begin="10895" end="11382">
        <descriptor begin="10858" end="10891" name="genDiagram" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="10895" end="10912" value="&#xD;&#xA;        &lt;!--  _"/>
        <statements xsi:type="statements:Feature" begin="10914" end="10981">
          <expression xsi:type="expressions:CallSet" begin="10914" end="10981">
            <calls begin="10914" end="10981" name="repeat" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="10921" end="10924" value="_"/>
              <arguments xsi:type="expressions:CallSet" begin="10926" end="10980">
                <calls begin="10926" end="10945" name="oppositeAttribute" prefix=""/>
                <calls begin="10946" end="10950" name="type" prefix=""/>
                <calls begin="10951" end="10955" name="name" prefix=""/>
                <calls begin="10956" end="10971" name="toSqlNotation" prefix=""/>
                <calls begin="10972" end="10980" name="length" prefix=""/>
              </arguments>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10983" end="10989" value="_     "/>
        <statements xsi:type="statements:Feature" begin="10991" end="11018">
          <expression xsi:type="expressions:CallSet" begin="10991" end="11018">
            <calls begin="10991" end="11018" name="repeat" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="10998" end="11001" value=" "/>
              <arguments xsi:type="expressions:CallSet" begin="11003" end="11017">
                <calls begin="11003" end="11010" name="args" prefix="">
                  <arguments xsi:type="expressions:IntegerLiteral" begin="11008" end="11009"/>
                </calls>
                <calls begin="11011" end="11017" name="length" prefix=""/>
              </arguments>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11020" end="11022" value=" _"/>
        <statements xsi:type="statements:Feature" begin="11024" end="11071">
          <expression xsi:type="expressions:CallSet" begin="11024" end="11071">
            <calls begin="11024" end="11071" name="repeat" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="11031" end="11034" value="_"/>
              <arguments xsi:type="expressions:CallSet" begin="11036" end="11070">
                <calls begin="11036" end="11040" name="type" prefix=""/>
                <calls begin="11041" end="11045" name="name" prefix=""/>
                <calls begin="11046" end="11061" name="toSqlNotation" prefix=""/>
                <calls begin="11062" end="11070" name="length" prefix=""/>
              </arguments>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11073" end="11091" value="_&#xD;&#xA;             | "/>
        <statements xsi:type="statements:Feature" begin="11093" end="11138">
          <expression xsi:type="expressions:CallSet" begin="11093" end="11138">
            <calls begin="11093" end="11112" name="oppositeAttribute" prefix=""/>
            <calls begin="11113" end="11117" name="type" prefix=""/>
            <calls begin="11118" end="11122" name="name" prefix=""/>
            <calls begin="11123" end="11138" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11140" end="11144" value=" |- "/>
        <statements xsi:type="statements:Feature" begin="11146" end="11153">
          <expression xsi:type="expressions:CallSet" begin="11146" end="11153">
            <calls begin="11146" end="11153" name="args" prefix="">
              <arguments xsi:type="expressions:IntegerLiteral" begin="11151" end="11152"/>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11155" end="11159" value=" -| "/>
        <statements xsi:type="statements:Feature" begin="11161" end="11186">
          <expression xsi:type="expressions:CallSet" begin="11161" end="11186">
            <calls begin="11161" end="11165" name="type" prefix=""/>
            <calls begin="11166" end="11170" name="name" prefix=""/>
            <calls begin="11171" end="11186" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11188" end="11207" value=" |&#xD;&#xA;              _"/>
        <statements xsi:type="statements:Feature" begin="11209" end="11276">
          <expression xsi:type="expressions:CallSet" begin="11209" end="11276">
            <calls begin="11209" end="11276" name="repeat" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="11216" end="11219" value="_"/>
              <arguments xsi:type="expressions:CallSet" begin="11221" end="11275">
                <calls begin="11221" end="11240" name="oppositeAttribute" prefix=""/>
                <calls begin="11241" end="11245" name="type" prefix=""/>
                <calls begin="11246" end="11250" name="name" prefix=""/>
                <calls begin="11251" end="11266" name="toSqlNotation" prefix=""/>
                <calls begin="11267" end="11275" name="length" prefix=""/>
              </arguments>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11278" end="11284" value="_     "/>
        <statements xsi:type="statements:Feature" begin="11286" end="11313">
          <expression xsi:type="expressions:CallSet" begin="11286" end="11313">
            <calls begin="11286" end="11313" name="repeat" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="11293" end="11296" value=" "/>
              <arguments xsi:type="expressions:CallSet" begin="11298" end="11312">
                <calls begin="11298" end="11305" name="args" prefix="">
                  <arguments xsi:type="expressions:IntegerLiteral" begin="11303" end="11304"/>
                </calls>
                <calls begin="11306" end="11312" name="length" prefix=""/>
              </arguments>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11315" end="11317" value=" _"/>
        <statements xsi:type="statements:Feature" begin="11319" end="11366">
          <expression xsi:type="expressions:CallSet" begin="11319" end="11366">
            <calls begin="11319" end="11366" name="repeat" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="11326" end="11329" value="_"/>
              <arguments xsi:type="expressions:CallSet" begin="11331" end="11365">
                <calls begin="11331" end="11335" name="type" prefix=""/>
                <calls begin="11336" end="11340" name="name" prefix=""/>
                <calls begin="11341" end="11356" name="toSqlNotation" prefix=""/>
                <calls begin="11357" end="11365" name="length" prefix=""/>
              </arguments>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11368" end="11382" value="_&#xD;&#xA;        -->"/>
      </scripts>
      <scripts begin="11436" end="11695">
        <descriptor begin="11395" end="11432" name="isMainEndPoint" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="11441" end="11690">
          <condition xsi:type="expressions:Parenthesis" begin="11441" end="11661">
            <expression xsi:type="expressions:Operator" begin="11442" end="11660" operator="||">
              <operands xsi:type="expressions:Operator" begin="11442" end="11468" operator="==">
                <operands xsi:type="expressions:CallSet" begin="11442" end="11453">
                  <calls begin="11442" end="11453" name="aggregation" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="11457" end="11468" value="composite"/>
              </operands>
              <operands xsi:type="expressions:Parenthesis" begin="11478" end="11660">
                <expression xsi:type="expressions:Operator" begin="11479" end="11652" operator="&amp;&amp;">
                  <operands xsi:type="expressions:Operator" begin="11479" end="11523" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="11479" end="11508">
                      <calls begin="11479" end="11496" name="oppositeAttribute" prefix=""/>
                      <calls begin="11497" end="11508" name="aggregation" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="11512" end="11523" value="composite"/>
                  </operands>
                  <operands xsi:type="expressions:Parenthesis" begin="11538" end="11652">
                    <expression xsi:type="expressions:Operator" begin="11539" end="11640" operator="||">
                      <operands xsi:type="expressions:Operator" begin="11539" end="11573" operator=">">
                        <operands xsi:type="expressions:CallSet" begin="11539" end="11569">
                          <calls begin="11539" end="11569" name="compare" prefix="">
                            <arguments xsi:type="expressions:CallSet" begin="11547" end="11557">
                              <calls begin="11547" end="11552" name="class" prefix=""/>
                              <calls begin="11553" end="11557" name="name" prefix=""/>
                            </arguments>
                            <arguments xsi:type="expressions:CallSet" begin="11559" end="11568">
                              <calls begin="11559" end="11563" name="type" prefix=""/>
                              <calls begin="11564" end="11568" name="name" prefix=""/>
                            </arguments>
                          </calls>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="11572" end="11573"/>
                      </operands>
                      <operands xsi:type="expressions:Parenthesis" begin="11589" end="11640">
                        <expression xsi:type="expressions:Operator" begin="11590" end="11639" operator="&amp;&amp;">
                          <operands xsi:type="expressions:Operator" begin="11590" end="11603" operator="==">
                            <operands xsi:type="expressions:CallSet" begin="11590" end="11595">
                              <calls begin="11590" end="11595" name="class" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:CallSet" begin="11599" end="11603">
                              <calls begin="11599" end="11603" name="type" prefix=""/>
                            </operands>
                          </operands>
                          <operands xsi:type="expressions:Operator" begin="11607" end="11639" operator=">">
                            <operands xsi:type="expressions:CallSet" begin="11607" end="11635">
                              <calls begin="11607" end="11635" name="compare" prefix="">
                                <arguments xsi:type="expressions:CallSet" begin="11615" end="11619">
                                  <calls begin="11615" end="11619" name="name" prefix=""/>
                                </arguments>
                                <arguments xsi:type="expressions:CallSet" begin="11621" end="11634">
                                  <calls begin="11621" end="11629" name="opposite" prefix=""/>
                                  <calls begin="11630" end="11634" name="name" prefix=""/>
                                </arguments>
                              </calls>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="11638" end="11639"/>
                          </operands>
                        </expression>
                      </operands>
                    </expression>
                  </operands>
                </expression>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="11671" end="11675" value="true"/>
          <elseStatements xsi:type="statements:Text" begin="11685" end="11690" value="false"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Metamodel" name="http://www.eclipse.org/uml2/2.0.0/UML"/>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.StringServices">
      <methods name="toPath" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="repeat" return="java.lang.String">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="int"/>
      </methods>
      <methods name="uniqueCode" return="int">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="toStandardNotation" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="toPkgName" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isPrimitiveType" return="boolean">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="compare" return="int">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="java.lang.String"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.ListServices">
      <methods name="filterExistProperty" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
        <parameters type="boolean"/>
      </methods>
      <methods name="getAllInstances" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENode"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isEmpty" return="boolean">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.Uml2Services">
      <methods name="getAssociations" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="getAssociations" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Interface"/>
      </methods>
      <methods name="isNavigable" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
      <methods name="returnResult" return="org.eclipse.uml2.uml.Parameter">
        <parameters type="org.eclipse.uml2.uml.Operation"/>
      </methods>
      <methods name="subClass" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="hasStereotype" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="filterWithStereotype" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="attributeIds" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
      <methods name="filterWithOutStereotype" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="attributeNotIds" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
      <methods name="primitiveAttributes" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="pointedAttribute" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="oppositeAttribute" return="org.eclipse.uml2.uml.Property">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
      <methods name="oppositeAttributeOf" return="org.eclipse.uml2.uml.Property">
        <parameters type="org.eclipse.uml2.uml.Association"/>
        <parameters type="org.eclipse.uml2.uml.Classifier"/>
      </methods>
      <methods name="getRealParameters" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENode"/>
      </methods>
      <methods name="getElementByXmiId" return="org.eclipse.emf.ecore.EObject">
        <parameters type="java.lang.String"/>
        <parameters type="org.eclipse.emf.ecore.EObject"/>
      </methods>
      <methods name="getValue" return="java.lang.Object">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="java.lang.String"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.gen.sql.services.SqlTypeServices">
      <methods name="toSqlNotation" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isBiAssociationSource" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
    </resources>
  </mt:ResourceSet>
  <ecore:EAnnotation source="positions"/>
</xmi:XMI>
