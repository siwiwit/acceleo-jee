[module main('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::acceleo::module::pim::uml21::gen::java::spring::component::componenthessianxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::component::componenttestxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::component::componentxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::config::config /]
[import org::acceleo::module::pim::uml21::gen::java::spring::config::configxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::dao::dao /]
[import org::acceleo::module::pim::uml21::gen::java::spring::dao::hibernate::daohibernatetestimpl /]
[import org::acceleo::module::pim::uml21::gen::java::spring::dao::hibernate::daohibernatetestsuite /]
[import org::acceleo::module::pim::uml21::gen::java::spring::dao::hibernate::daohibernatexml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::dao::hibernate::daoimplhibernate /]
[import org::acceleo::module::pim::uml21::gen::java::spring::dto::dto /]
[import org::acceleo::module::pim::uml21::gen::java::spring::java::javabusinessexception /]
[import org::acceleo::module::pim::uml21::gen::java::spring::java::javaclass /]
[import org::acceleo::module::pim::uml21::gen::java::spring::java::javaenum /]
[import org::acceleo::module::pim::uml21::gen::java::spring::java::javaexception /]
[import org::acceleo::module::pim::uml21::gen::java::spring::java::javainterface /]
[import org::acceleo::module::pim::uml21::gen::java::spring::log4jconfig /]
[import org::acceleo::module::pim::uml21::gen::java::spring::service::serviceimpl /]
[import org::acceleo::module::pim::uml21::gen::java::spring::service::servicetestimpl /]
[import org::acceleo::module::pim::uml21::gen::java::spring::service::service /]
[import org::acceleo::module::pim::uml21::gen::java::spring::service::servicexml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::tests::abstractbusinesslayertest /]
[import org::acceleo::module::pim::uml21::gen::java::spring::tests::entitytesthelper /]
[import org::acceleo::module::pim::uml21::gen::java::spring::tests::testsxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::tests::testsuite /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::servletcontroller /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::servletcontrollerxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::velocity::uiimpl /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::velocity::ui /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::velocity::uixml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::velocity::velocityproperties /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::velocity::velocityviewfactory /]
[import org::acceleo::module::pim::uml21::gen::java::spring::ui::web::velocity::velocityview /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::dwr::servicedwrxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::gwt::gwtmodulexml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::gwt::gwtserviceasync /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::gwt::gwtserviceimpl /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::gwt::gwtservice /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::gwt::servicegwtrpcxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::hessian::abstractbusinesslayertesthessian /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::hessian::servicehessianclientfactory /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::hessian::servicehessiantestimpl /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::hessian::servicehessianxml /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::webserviceinterface /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::webservicemocktest /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::xfire::servicexfireclientfactory /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::xfire::servicexfiremocktest /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::xfire::servicexfiretestimpl /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::xfire::servicexfire /]
[import org::acceleo::module::pim::uml21::gen::java::spring::webservice::xfire::servicexfirexml /]

[template public generate(aModel : Model)]
	[comment @main /]

	[comment Call the file block in 'componenthessianxml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'componenttestxml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'componentxml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'configxml' /]
	[ generateConfigXml() /]

	[comment Call the file block in 'daohibernatetestsuite' /]
	[ generateDaoHibernateTestSuit() /]

	[comment Call the file block in 'xml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'log4jconfig' /]
	[ generateLog4jConfig() /]

	[comment Call the file block in 'xml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'abstractbusinesslayertest' /]
	[ generateAbstractBusinessLayerTests() /]

	[comment Call the file block in 'xml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'testsuite' /]
	[ generate() /]

	[comment Call the file block in 'xml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'servletcontrollerxml' /]
	[ generateSevletControllerSpringApplicationContext() /]

	[comment Call the file block in 'velocityproperties' /]
	[ generateVelocityConfig() /]

	[comment Call the file block in 'velocityviewfactory' /]
	[ generateVelocityViewFactory() /]

	[comment Call the file block in 'servicexml' /]
	[ generateServiceSpringApplicationContext() /]

	[comment Call the file block in 'testsxml' /]
	[ generateTestSpringApplicationContext() /]

	[comment Call the file block in 'xml' /]
	[ springApplicationContext() /]

	[comment Call the file block in 'abstractbusinesslayertesthessian' /]
	[ generateAbstractBusinessLayerTests() /]

	[comment Call the file block in 'servicehessianclientfactory' /]
	[ generateXfireWSClientFactory() /]

	[comment Call the file block in 'servicehessianxml' /]
	[ generateServiceHessianSpringApplicationContext() /]

	[comment Call the file block in 'servicexfireclientfactory' /]
	[ generateXfireWSClientFactory() /]

	[comment Call the file block in 'servicexfire' /]
	[ generateServiceFireSpringApplicationContext() /]

	[comment Call the file block in 'servicexfirexml' /]
	[ springApplicationContext() /]


	[for (aType : Type | aModel.ownedElement->filter(Type))]
		[aType.generateClassifier()/]
	[/for]

	[for (pack : Package | aModel.ownedElement->filter(Package))]
		[pack.generatePackage()/]
	[/for]

[/template]

[template public generatePackage(aPackage : Package)]
	[for (aClassifier : Classifier | aPackage.ownedElement->filter(Classifier))]
		[aClassifier.generateClassifier()/]
	[/for]
	[for (pack : Package | aPackage.nestedPackage)]
		[pack.generatePackage()/]
	[/for]
[/template]

[template public generateClassifier(aType : Type)]
	[if (aType.oclIsTypeOf(Class))]
		[let aClass : Class = aType.oclAsType(Class)]
	[comment Call the file block in 'dao' /]
	[ aClass.generateSpringDao() /]

	[comment Call the file block in 'daoimplhibernate' /]
	[ aClass.generateDaoImplementHibernate() /]

	[comment Call the file block in 'daohibernatetestimpl' /]
	[ aClass.generateDaoHibernateTestImpl() /]

	[comment Call the file block in 'config' /]
	[ aClass.generateConfig() /]

	[comment Call the file block in 'javabusinessexception' /]
	[ aClass.generateJavaBusinessException() /]

	[comment Call the file block in 'dto' /]
	[ aClass.generateSpringDto() /]

	[comment Call the file block in 'velocityview' /]
	[ aClass.generateVelocityView() /]

	[comment Call the file block in 'javaclass' /]
	[ aClass.generateJavaClass() /]

	[comment Call the file block in 'javaexception' /]
	[ aClass.generateJavaExceptionClass() /]

	[comment Call the file block in 'serviceimpl' /]
	[ aClass.generateServiceImpl() /]

	[comment Call the file block in 'servicetestimpl' /]
	[ aClass.generateServiceTestImpl() /]

	[comment Call the file block in 'service' /]
	[ aClass.generateService() /]

	[comment Call the file block in 'entitytesthelper' /]
	[ aClass.generateEntityTestHelper() /]

	[comment Call the file block in 'servletcontroller' /]
	[ aClass.generateServletController() /]

	[comment Call the file block in 'uiimpl' /]
	[ aClass.generateUiImpl() /]

	[comment Call the file block in 'ui' /]
	[ aClass.generateUi() /]

	[comment Call the file block in 'gwtserviceasync' /]
	[ aClass.generateGwtServiceAsync() /]

	[comment Call the file block in 'gwtserviceimpl' /]
	[ aClass.generateGwtServiceImpl() /]

	[comment Call the file block in 'gwtservice' /]
	[ aClass.generateGwtService() /]

	[comment Call the file block in 'servicehessiantestimpl' /]
	[ aClass.generateSeviceHessianTestImpl() /]

	[comment Call the file block in 'webserviceinterface' /]
	[ aClass.generateWebServiceInterface() /]

	[comment Call the file block in 'webservicemocktest' /]
	[ aClass.generateWebServiceMockTest() /]

	[comment Call the file block in 'servicexfiremocktest' /]
	[ aClass.generateServiceFireMockTest() /]

	[comment Call the file block in 'servicexfiretestimpl' /]
	[ aClass.generateServiceFireTestImpl() /]

		[/let]
	[elseif (aType.oclIsTypeOf(Interface))]
		[let aInterface : Interface = aType.oclAsType(Interface)]
	[comment Call the file block in 'javainterface' /]
	[ aInterface.generateJavaInterface() /]
		[/let]
	[elseif (aType.oclIsTypeOf(Enumeration))]
		[let aEnumeration : Enumeration = aType.oclAsType(Enumeration)]
	[comment Call the file block in 'javaenum' /]
	[ aEnumeration.generateEnum() /]
		[/let]
	[/if]

[/template]

